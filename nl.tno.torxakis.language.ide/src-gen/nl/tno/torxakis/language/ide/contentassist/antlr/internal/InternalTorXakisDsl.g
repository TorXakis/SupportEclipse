/*
 * generated by Xtext 2.10.0
 */
grammar InternalTorXakisDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package nl.tno.torxakis.language.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package nl.tno.torxakis.language.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import nl.tno.torxakis.language.services.TorXakisDslGrammarAccess;

}
@parser::members {
	private TorXakisDslGrammarAccess grammarAccess;

	public void setGrammarAccess(TorXakisDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)*
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDefs
entryRuleTypeDefs
:
{ before(grammarAccess.getTypeDefsRule()); }
	 ruleTypeDefs
{ after(grammarAccess.getTypeDefsRule()); } 
	 EOF 
;

// Rule TypeDefs
ruleTypeDefs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefsAccess().getGroup()); }
		(rule__TypeDefs__Group__0)
		{ after(grammarAccess.getTypeDefsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncDefs
entryRuleFuncDefs
:
{ before(grammarAccess.getFuncDefsRule()); }
	 ruleFuncDefs
{ after(grammarAccess.getFuncDefsRule()); } 
	 EOF 
;

// Rule FuncDefs
ruleFuncDefs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncDefsAccess().getGroup()); }
		(rule__FuncDefs__Group__0)
		{ after(grammarAccess.getFuncDefsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncDef
entryRuleFuncDef
:
{ before(grammarAccess.getFuncDefRule()); }
	 ruleFuncDef
{ after(grammarAccess.getFuncDefRule()); } 
	 EOF 
;

// Rule FuncDef
ruleFuncDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncDefAccess().getGroup()); }
		(rule__FuncDef__Group__0)
		{ after(grammarAccess.getFuncDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstDefs
entryRuleConstDefs
:
{ before(grammarAccess.getConstDefsRule()); }
	 ruleConstDefs
{ after(grammarAccess.getConstDefsRule()); } 
	 EOF 
;

// Rule ConstDefs
ruleConstDefs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDefsAccess().getGroup()); }
		(rule__ConstDefs__Group__0)
		{ after(grammarAccess.getConstDefsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstDef
entryRuleConstDef
:
{ before(grammarAccess.getConstDefRule()); }
	 ruleConstDef
{ after(grammarAccess.getConstDefRule()); } 
	 EOF 
;

// Rule ConstDef
ruleConstDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDefAccess().getGroup()); }
		(rule__ConstDef__Group__0)
		{ after(grammarAccess.getConstDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcDefs
entryRuleProcDefs
:
{ before(grammarAccess.getProcDefsRule()); }
	 ruleProcDefs
{ after(grammarAccess.getProcDefsRule()); } 
	 EOF 
;

// Rule ProcDefs
ruleProcDefs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcDefsAccess().getGroup()); }
		(rule__ProcDefs__Group__0)
		{ after(grammarAccess.getProcDefsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcDef
entryRuleProcDef
:
{ before(grammarAccess.getProcDefRule()); }
	 ruleProcDef
{ after(grammarAccess.getProcDefRule()); } 
	 EOF 
;

// Rule ProcDef
ruleProcDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcDefAccess().getGroup()); }
		(rule__ProcDef__Group__0)
		{ after(grammarAccess.getProcDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStautDefs
entryRuleStautDefs
:
{ before(grammarAccess.getStautDefsRule()); }
	 ruleStautDefs
{ after(grammarAccess.getStautDefsRule()); } 
	 EOF 
;

// Rule StautDefs
ruleStautDefs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStautDefsAccess().getGroup()); }
		(rule__StautDefs__Group__0)
		{ after(grammarAccess.getStautDefsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStautDef
entryRuleStautDef
:
{ before(grammarAccess.getStautDefRule()); }
	 ruleStautDef
{ after(grammarAccess.getStautDefRule()); } 
	 EOF 
;

// Rule StautDef
ruleStautDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStautDefAccess().getGroup()); }
		(rule__StautDef__Group__0)
		{ after(grammarAccess.getStautDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelDefs
entryRuleChannelDefs
:
{ before(grammarAccess.getChannelDefsRule()); }
	 ruleChannelDefs
{ after(grammarAccess.getChannelDefsRule()); } 
	 EOF 
;

// Rule ChannelDefs
ruleChannelDefs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelDefsAccess().getGroup()); }
		(rule__ChannelDefs__Group__0)
		{ after(grammarAccess.getChannelDefsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelDef
entryRuleChannelDef
:
{ before(grammarAccess.getChannelDefRule()); }
	 ruleChannelDef
{ after(grammarAccess.getChannelDefRule()); } 
	 EOF 
;

// Rule ChannelDef
ruleChannelDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelDefAccess().getGroup()); }
		(rule__ChannelDef__Group__0)
		{ after(grammarAccess.getChannelDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelDef
entryRuleModelDef
:
{ before(grammarAccess.getModelDefRule()); }
	 ruleModelDef
{ after(grammarAccess.getModelDefRule()); } 
	 EOF 
;

// Rule ModelDef
ruleModelDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelDefAccess().getGroup()); }
		(rule__ModelDef__Group__0)
		{ after(grammarAccess.getModelDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapperDef
entryRuleMapperDef
:
{ before(grammarAccess.getMapperDefRule()); }
	 ruleMapperDef
{ after(grammarAccess.getMapperDefRule()); } 
	 EOF 
;

// Rule MapperDef
ruleMapperDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapperDefAccess().getGroup()); }
		(rule__MapperDef__Group__0)
		{ after(grammarAccess.getMapperDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCnectDef
entryRuleCnectDef
:
{ before(grammarAccess.getCnectDefRule()); }
	 ruleCnectDef
{ after(grammarAccess.getCnectDefRule()); } 
	 EOF 
;

// Rule CnectDef
ruleCnectDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCnectDefAccess().getGroup()); }
		(rule__CnectDef__Group__0)
		{ after(grammarAccess.getCnectDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStautItems
entryRuleStautItems
:
{ before(grammarAccess.getStautItemsRule()); }
	 ruleStautItems
{ after(grammarAccess.getStautItemsRule()); } 
	 EOF 
;

// Rule StautItems
ruleStautItems 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStautItemsAccess().getGroup()); }
		(rule__StautItems__Group__0)
		{ after(grammarAccess.getStautItemsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateItem
entryRuleStateItem
:
{ before(grammarAccess.getStateItemRule()); }
	 ruleStateItem
{ after(grammarAccess.getStateItemRule()); } 
	 EOF 
;

// Rule StateItem
ruleStateItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateItemAccess().getGroup()); }
		(rule__StateItem__Group__0)
		{ after(grammarAccess.getStateItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarItem
entryRuleVarItem
:
{ before(grammarAccess.getVarItemRule()); }
	 ruleVarItem
{ after(grammarAccess.getVarItemRule()); } 
	 EOF 
;

// Rule VarItem
ruleVarItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarItemAccess().getGroup()); }
		(rule__VarItem__Group__0)
		{ after(grammarAccess.getVarItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitItem
entryRuleInitItem
:
{ before(grammarAccess.getInitItemRule()); }
	 ruleInitItem
{ after(grammarAccess.getInitItemRule()); } 
	 EOF 
;

// Rule InitItem
ruleInitItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitItemAccess().getGroup()); }
		(rule__InitItem__Group__0)
		{ after(grammarAccess.getInitItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransItem
entryRuleTransItem
:
{ before(grammarAccess.getTransItemRule()); }
	 ruleTransItem
{ after(grammarAccess.getTransItemRule()); } 
	 EOF 
;

// Rule TransItem
ruleTransItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransItemAccess().getGroup()); }
		(rule__TransItem__Group__0)
		{ after(grammarAccess.getTransItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateList
entryRuleUpdateList
:
{ before(grammarAccess.getUpdateListRule()); }
	 ruleUpdateList
{ after(grammarAccess.getUpdateListRule()); } 
	 EOF 
;

// Rule UpdateList
ruleUpdateList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateListAccess().getGroup()); }
		(rule__UpdateList__Group__0)
		{ after(grammarAccess.getUpdateListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapperName
entryRuleMapperName
:
{ before(grammarAccess.getMapperNameRule()); }
	 ruleMapperName
{ after(grammarAccess.getMapperNameRule()); } 
	 EOF 
;

// Rule MapperName
ruleMapperName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapperNameAccess().getNameAssignment()); }
		(rule__MapperName__NameAssignment)
		{ after(grammarAccess.getMapperNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeConstructorList
entryRuleNeConstructorList
:
{ before(grammarAccess.getNeConstructorListRule()); }
	 ruleNeConstructorList
{ after(grammarAccess.getNeConstructorListRule()); } 
	 EOF 
;

// Rule NeConstructorList
ruleNeConstructorList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeConstructorListAccess().getGroup()); }
		(rule__NeConstructorList__Group__0)
		{ after(grammarAccess.getNeConstructorListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructor
entryRuleConstructor
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorAccess().getGroup()); }
		(rule__Constructor__Group__0)
		{ after(grammarAccess.getConstructorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeFieldList
entryRuleNeFieldList
:
{ before(grammarAccess.getNeFieldListRule()); }
	 ruleNeFieldList
{ after(grammarAccess.getNeFieldListRule()); } 
	 EOF 
;

// Rule NeFieldList
ruleNeFieldList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeFieldListAccess().getGroup()); }
		(rule__NeFieldList__Group__0)
		{ after(grammarAccess.getNeFieldListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFields
entryRuleFields
:
{ before(grammarAccess.getFieldsRule()); }
	 ruleFields
{ after(grammarAccess.getFieldsRule()); } 
	 EOF 
;

// Rule Fields
ruleFields 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldsAccess().getGroup()); }
		(rule__Fields__Group__0)
		{ after(grammarAccess.getFieldsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeFieldNameList
entryRuleNeFieldNameList
:
{ before(grammarAccess.getNeFieldNameListRule()); }
	 ruleNeFieldNameList
{ after(grammarAccess.getNeFieldNameListRule()); } 
	 EOF 
;

// Rule NeFieldNameList
ruleNeFieldNameList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeFieldNameListAccess().getGroup()); }
		(rule__NeFieldNameList__Group__0)
		{ after(grammarAccess.getNeFieldNameListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldName
entryRuleFieldName
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldNameAccess().getNameAssignment()); }
		(rule__FieldName__NameAssignment)
		{ after(grammarAccess.getFieldNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExitDecl
entryRuleExitDecl
:
{ before(grammarAccess.getExitDeclRule()); }
	 ruleExitDecl
{ after(grammarAccess.getExitDeclRule()); } 
	 EOF 
;

// Rule ExitDecl
ruleExitDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExitDeclAccess().getGroup()); }
		(rule__ExitDecl__Group__0)
		{ after(grammarAccess.getExitDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelName
entryRuleModelName
:
{ before(grammarAccess.getModelNameRule()); }
	 ruleModelName
{ after(grammarAccess.getModelNameRule()); } 
	 EOF 
;

// Rule ModelName
ruleModelName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelNameAccess().getNameAssignment()); }
		(rule__ModelName__NameAssignment)
		{ after(grammarAccess.getModelNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectionItem
entryRuleConnectionItem
:
{ before(grammarAccess.getConnectionItemRule()); }
	 ruleConnectionItem
{ after(grammarAccess.getConnectionItemRule()); } 
	 EOF 
;

// Rule ConnectionItem
ruleConnectionItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionItemAccess().getAlternatives()); }
		(rule__ConnectionItem__Alternatives)
		{ after(grammarAccess.getConnectionItemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectionOut
entryRuleConnectionOut
:
{ before(grammarAccess.getConnectionOutRule()); }
	 ruleConnectionOut
{ after(grammarAccess.getConnectionOutRule()); } 
	 EOF 
;

// Rule ConnectionOut
ruleConnectionOut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionOutAccess().getGroup()); }
		(rule__ConnectionOut__Group__0)
		{ after(grammarAccess.getConnectionOutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectionIn
entryRuleConnectionIn
:
{ before(grammarAccess.getConnectionInRule()); }
	 ruleConnectionIn
{ after(grammarAccess.getConnectionInRule()); } 
	 EOF 
;

// Rule ConnectionIn
ruleConnectionIn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionInAccess().getGroup()); }
		(rule__ConnectionIn__Group__0)
		{ after(grammarAccess.getConnectionInAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEncoding
entryRuleEncoding
:
{ before(grammarAccess.getEncodingRule()); }
	 ruleEncoding
{ after(grammarAccess.getEncodingRule()); } 
	 EOF 
;

// Rule Encoding
ruleEncoding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEncodingAccess().getGroup()); }
		(rule__Encoding__Group__0)
		{ after(grammarAccess.getEncodingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecoding
entryRuleDecoding
:
{ before(grammarAccess.getDecodingRule()); }
	 ruleDecoding
{ after(grammarAccess.getDecodingRule()); } 
	 EOF 
;

// Rule Decoding
ruleDecoding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecodingAccess().getGroup()); }
		(rule__Decoding__Group__0)
		{ after(grammarAccess.getDecodingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortNumber
entryRulePortNumber
:
{ before(grammarAccess.getPortNumberRule()); }
	 rulePortNumber
{ after(grammarAccess.getPortNumberRule()); } 
	 EOF 
;

// Rule PortNumber
rulePortNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortNumberAccess().getPortNumberAssignment()); }
		(rule__PortNumber__PortNumberAssignment)
		{ after(grammarAccess.getPortNumberAccess().getPortNumberAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHostName
entryRuleHostName
:
{ before(grammarAccess.getHostNameRule()); }
	 ruleHostName
{ after(grammarAccess.getHostNameRule()); } 
	 EOF 
;

// Rule HostName
ruleHostName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHostNameAccess().getNameAssignment()); }
		(rule__HostName__NameAssignment)
		{ after(grammarAccess.getHostNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStautName
entryRuleStautName
:
{ before(grammarAccess.getStautNameRule()); }
	 ruleStautName
{ after(grammarAccess.getStautNameRule()); } 
	 EOF 
;

// Rule StautName
ruleStautName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStautNameAccess().getNameAssignment()); }
		(rule__StautName__NameAssignment)
		{ after(grammarAccess.getStautNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelDefName
entryRuleChannelDefName
:
{ before(grammarAccess.getChannelDefNameRule()); }
	 ruleChannelDefName
{ after(grammarAccess.getChannelDefNameRule()); } 
	 EOF 
;

// Rule ChannelDefName
ruleChannelDefName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelDefNameAccess().getNameAssignment()); }
		(rule__ChannelDefName__NameAssignment)
		{ after(grammarAccess.getChannelDefNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcName
entryRuleProcName
:
{ before(grammarAccess.getProcNameRule()); }
	 ruleProcName
{ after(grammarAccess.getProcNameRule()); } 
	 EOF 
;

// Rule ProcName
ruleProcName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcNameAccess().getNameAssignment()); }
		(rule__ProcName__NameAssignment)
		{ after(grammarAccess.getProcNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCnectName
entryRuleCnectName
:
{ before(grammarAccess.getCnectNameRule()); }
	 ruleCnectName
{ after(grammarAccess.getCnectNameRule()); } 
	 EOF 
;

// Rule CnectName
ruleCnectName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCnectNameAccess().getNameAssignment()); }
		(rule__CnectName__NameAssignment)
		{ after(grammarAccess.getCnectNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeVarsDeclarationList
entryRuleNeVarsDeclarationList
:
{ before(grammarAccess.getNeVarsDeclarationListRule()); }
	 ruleNeVarsDeclarationList
{ after(grammarAccess.getNeVarsDeclarationListRule()); } 
	 EOF 
;

// Rule NeVarsDeclarationList
ruleNeVarsDeclarationList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeVarsDeclarationListAccess().getGroup()); }
		(rule__NeVarsDeclarationList__Group__0)
		{ after(grammarAccess.getNeVarsDeclarationListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarsDeclaration
entryRuleVarsDeclaration
:
{ before(grammarAccess.getVarsDeclarationRule()); }
	 ruleVarsDeclaration
{ after(grammarAccess.getVarsDeclarationRule()); } 
	 EOF 
;

// Rule VarsDeclaration
ruleVarsDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsDeclarationAccess().getGroup()); }
		(rule__VarsDeclaration__Group__0)
		{ after(grammarAccess.getVarsDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeVarDeclList
entryRuleNeVarDeclList
:
{ before(grammarAccess.getNeVarDeclListRule()); }
	 ruleNeVarDeclList
{ after(grammarAccess.getNeVarDeclListRule()); } 
	 EOF 
;

// Rule NeVarDeclList
ruleNeVarDeclList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeVarDeclListAccess().getGroup()); }
		(rule__NeVarDeclList__Group__0)
		{ after(grammarAccess.getNeVarDeclListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarsDecl
entryRuleVarsDecl
:
{ before(grammarAccess.getVarsDeclRule()); }
	 ruleVarsDecl
{ after(grammarAccess.getVarsDeclRule()); } 
	 EOF 
;

// Rule VarsDecl
ruleVarsDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsDeclAccess().getGroup()); }
		(rule__VarsDecl__Group__0)
		{ after(grammarAccess.getVarsDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeChannelsDeclList
entryRuleNeChannelsDeclList
:
{ before(grammarAccess.getNeChannelsDeclListRule()); }
	 ruleNeChannelsDeclList
{ after(grammarAccess.getNeChannelsDeclListRule()); } 
	 EOF 
;

// Rule NeChannelsDeclList
ruleNeChannelsDeclList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeChannelsDeclListAccess().getGroup()); }
		(rule__NeChannelsDeclList__Group__0)
		{ after(grammarAccess.getNeChannelsDeclListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelsDecl
entryRuleChannelsDecl
:
{ before(grammarAccess.getChannelsDeclRule()); }
	 ruleChannelsDecl
{ after(grammarAccess.getChannelsDeclRule()); } 
	 EOF 
;

// Rule ChannelsDecl
ruleChannelsDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelsDeclAccess().getGroup()); }
		(rule__ChannelsDecl__Group__0)
		{ after(grammarAccess.getChannelsDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeTypeNameList
entryRuleNeTypeNameList
:
{ before(grammarAccess.getNeTypeNameListRule()); }
	 ruleNeTypeNameList
{ after(grammarAccess.getNeTypeNameListRule()); } 
	 EOF 
;

// Rule NeTypeNameList
ruleNeTypeNameList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeTypeNameListAccess().getGroup()); }
		(rule__NeTypeNameList__Group__0)
		{ after(grammarAccess.getNeTypeNameListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getNameAssignment()); }
		(rule__TypeName__NameAssignment)
		{ after(grammarAccess.getTypeNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeChannelNameList
entryRuleNeChannelNameList
:
{ before(grammarAccess.getNeChannelNameListRule()); }
	 ruleNeChannelNameList
{ after(grammarAccess.getNeChannelNameListRule()); } 
	 EOF 
;

// Rule NeChannelNameList
ruleNeChannelNameList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeChannelNameListAccess().getGroup()); }
		(rule__NeChannelNameList__Group__0)
		{ after(grammarAccess.getNeChannelNameListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeIdNameList
entryRuleNeIdNameList
:
{ before(grammarAccess.getNeIdNameListRule()); }
	 ruleNeIdNameList
{ after(grammarAccess.getNeIdNameListRule()); } 
	 EOF 
;

// Rule NeIdNameList
ruleNeIdNameList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeIdNameListAccess().getGroup()); }
		(rule__NeIdNameList__Group__0)
		{ after(grammarAccess.getNeIdNameListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdName
entryRuleIdName
:
{ before(grammarAccess.getIdNameRule()); }
	 ruleIdName
{ after(grammarAccess.getIdNameRule()); } 
	 EOF 
;

// Rule IdName
ruleIdName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdNameAccess().getAlternatives()); }
		(rule__IdName__Alternatives)
		{ after(grammarAccess.getIdNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelName
entryRuleChannelName
:
{ before(grammarAccess.getChannelNameRule()); }
	 ruleChannelName
{ after(grammarAccess.getChannelNameRule()); } 
	 EOF 
;

// Rule ChannelName
ruleChannelName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelNameAccess().getNameAssignment()); }
		(rule__ChannelName__NameAssignment)
		{ after(grammarAccess.getChannelNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeVarNameList
entryRuleNeVarNameList
:
{ before(grammarAccess.getNeVarNameListRule()); }
	 ruleNeVarNameList
{ after(grammarAccess.getNeVarNameListRule()); } 
	 EOF 
;

// Rule NeVarNameList
ruleNeVarNameList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeVarNameListAccess().getGroup()); }
		(rule__NeVarNameList__Group__0)
		{ after(grammarAccess.getNeVarNameListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarName
entryRuleVarName
:
{ before(grammarAccess.getVarNameRule()); }
	 ruleVarName
{ after(grammarAccess.getVarNameRule()); } 
	 EOF 
;

// Rule VarName
ruleVarName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarNameAccess().getNameAssignment()); }
		(rule__VarName__NameAssignment)
		{ after(grammarAccess.getVarNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviour
entryRuleProcessBehaviour
:
{ before(grammarAccess.getProcessBehaviourRule()); }
	 ruleProcessBehaviour
{ after(grammarAccess.getProcessBehaviourRule()); } 
	 EOF 
;

// Rule ProcessBehaviour
ruleProcessBehaviour 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourAccess().getProcessBehaviourLevel1ParserRuleCall()); }
		ruleProcessBehaviourLevel1
		{ after(grammarAccess.getProcessBehaviourAccess().getProcessBehaviourLevel1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourLevel1
entryRuleProcessBehaviourLevel1
:
{ before(grammarAccess.getProcessBehaviourLevel1Rule()); }
	 ruleProcessBehaviourLevel1
{ after(grammarAccess.getProcessBehaviourLevel1Rule()); } 
	 EOF 
;

// Rule ProcessBehaviourLevel1
ruleProcessBehaviourLevel1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getGroup()); }
		(rule__ProcessBehaviourLevel1__Group__0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourLevel2
entryRuleProcessBehaviourLevel2
:
{ before(grammarAccess.getProcessBehaviourLevel2Rule()); }
	 ruleProcessBehaviourLevel2
{ after(grammarAccess.getProcessBehaviourLevel2Rule()); } 
	 EOF 
;

// Rule ProcessBehaviourLevel2
ruleProcessBehaviourLevel2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getGroup()); }
		(rule__ProcessBehaviourLevel2__Group__0)
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourLevel3
entryRuleProcessBehaviourLevel3
:
{ before(grammarAccess.getProcessBehaviourLevel3Rule()); }
	 ruleProcessBehaviourLevel3
{ after(grammarAccess.getProcessBehaviourLevel3Rule()); } 
	 EOF 
;

// Rule ProcessBehaviourLevel3
ruleProcessBehaviourLevel3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourLevel3Access().getGroup()); }
		(rule__ProcessBehaviourLevel3__Group__0)
		{ after(grammarAccess.getProcessBehaviourLevel3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourLevel4
entryRuleProcessBehaviourLevel4
:
{ before(grammarAccess.getProcessBehaviourLevel4Rule()); }
	 ruleProcessBehaviourLevel4
{ after(grammarAccess.getProcessBehaviourLevel4Rule()); } 
	 EOF 
;

// Rule ProcessBehaviourLevel4
ruleProcessBehaviourLevel4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getAlternatives()); }
		(rule__ProcessBehaviourLevel4__Alternatives)
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcCall
entryRuleProcCall
:
{ before(grammarAccess.getProcCallRule()); }
	 ruleProcCall
{ after(grammarAccess.getProcCallRule()); } 
	 EOF 
;

// Rule ProcCall
ruleProcCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcCallAccess().getGroup()); }
		(rule__ProcCall__Group__0)
		{ after(grammarAccess.getProcCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeValExprList
entryRuleNeValExprList
:
{ before(grammarAccess.getNeValExprListRule()); }
	 ruleNeValExprList
{ after(grammarAccess.getNeValExprListRule()); } 
	 EOF 
;

// Rule NeValExprList
ruleNeValExprList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeValExprListAccess().getGroup()); }
		(rule__NeValExprList__Group__0)
		{ after(grammarAccess.getNeValExprListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourBracket
entryRuleProcessBehaviourBracket
:
{ before(grammarAccess.getProcessBehaviourBracketRule()); }
	 ruleProcessBehaviourBracket
{ after(grammarAccess.getProcessBehaviourBracketRule()); } 
	 EOF 
;

// Rule ProcessBehaviourBracket
ruleProcessBehaviourBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourBracketAccess().getGroup()); }
		(rule__ProcessBehaviourBracket__Group__0)
		{ after(grammarAccess.getProcessBehaviourBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourHide
entryRuleProcessBehaviourHide
:
{ before(grammarAccess.getProcessBehaviourHideRule()); }
	 ruleProcessBehaviourHide
{ after(grammarAccess.getProcessBehaviourHideRule()); } 
	 EOF 
;

// Rule ProcessBehaviourHide
ruleProcessBehaviourHide 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourHideAccess().getGroup()); }
		(rule__ProcessBehaviourHide__Group__0)
		{ after(grammarAccess.getProcessBehaviourHideAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourLet
entryRuleProcessBehaviourLet
:
{ before(grammarAccess.getProcessBehaviourLetRule()); }
	 ruleProcessBehaviourLet
{ after(grammarAccess.getProcessBehaviourLetRule()); } 
	 EOF 
;

// Rule ProcessBehaviourLet
ruleProcessBehaviourLet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourLetAccess().getGroup()); }
		(rule__ProcessBehaviourLet__Group__0)
		{ after(grammarAccess.getProcessBehaviourLetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourSequence
entryRuleProcessBehaviourSequence
:
{ before(grammarAccess.getProcessBehaviourSequenceRule()); }
	 ruleProcessBehaviourSequence
{ after(grammarAccess.getProcessBehaviourSequenceRule()); } 
	 EOF 
;

// Rule ProcessBehaviourSequence
ruleProcessBehaviourSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourSequenceAccess().getGroup()); }
		(rule__ProcessBehaviourSequence__Group__0)
		{ after(grammarAccess.getProcessBehaviourSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourGuarded
entryRuleProcessBehaviourGuarded
:
{ before(grammarAccess.getProcessBehaviourGuardedRule()); }
	 ruleProcessBehaviourGuarded
{ after(grammarAccess.getProcessBehaviourGuardedRule()); } 
	 EOF 
;

// Rule ProcessBehaviourGuarded
ruleProcessBehaviourGuarded 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourGuardedAccess().getGroup()); }
		(rule__ProcessBehaviourGuarded__Group__0)
		{ after(grammarAccess.getProcessBehaviourGuardedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBehaviourStop
entryRuleProcessBehaviourStop
:
{ before(grammarAccess.getProcessBehaviourStopRule()); }
	 ruleProcessBehaviourStop
{ after(grammarAccess.getProcessBehaviourStopRule()); } 
	 EOF 
;

// Rule ProcessBehaviourStop
ruleProcessBehaviourStop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBehaviourStopAccess().getStopAssignment()); }
		(rule__ProcessBehaviourStop__StopAssignment)
		{ after(grammarAccess.getProcessBehaviourStopAccess().getStopAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSynchronizedChannels
entryRuleSynchronizedChannels
:
{ before(grammarAccess.getSynchronizedChannelsRule()); }
	 ruleSynchronizedChannels
{ after(grammarAccess.getSynchronizedChannelsRule()); } 
	 EOF 
;

// Rule SynchronizedChannels
ruleSynchronizedChannels 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSynchronizedChannelsAccess().getGroup()); }
		(rule__SynchronizedChannels__Group__0)
		{ after(grammarAccess.getSynchronizedChannelsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalCommunications
entryRuleConditionalCommunications
:
{ before(grammarAccess.getConditionalCommunicationsRule()); }
	 ruleConditionalCommunications
{ after(grammarAccess.getConditionalCommunicationsRule()); } 
	 EOF 
;

// Rule ConditionalCommunications
ruleConditionalCommunications 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalCommunicationsAccess().getGroup()); }
		(rule__ConditionalCommunications__Group__0)
		{ after(grammarAccess.getConditionalCommunicationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommunications
entryRuleCommunications
:
{ before(grammarAccess.getCommunicationsRule()); }
	 ruleCommunications
{ after(grammarAccess.getCommunicationsRule()); } 
	 EOF 
;

// Rule Communications
ruleCommunications 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommunicationsAccess().getGroup()); }
		(rule__Communications__Group__0)
		{ after(grammarAccess.getCommunicationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommunication
entryRuleCommunication
:
{ before(grammarAccess.getCommunicationRule()); }
	 ruleCommunication
{ after(grammarAccess.getCommunicationRule()); } 
	 EOF 
;

// Rule Communication
ruleCommunication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommunicationAccess().getGroup()); }
		(rule__Communication__Group__0)
		{ after(grammarAccess.getCommunicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelOffer
entryRuleChannelOffer
:
{ before(grammarAccess.getChannelOfferRule()); }
	 ruleChannelOffer
{ after(grammarAccess.getChannelOfferRule()); } 
	 EOF 
;

// Rule ChannelOffer
ruleChannelOffer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelOfferAccess().getAlternatives()); }
		(rule__ChannelOffer__Alternatives)
		{ after(grammarAccess.getChannelOfferAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExpr
entryRuleValExpr
:
{ before(grammarAccess.getValExprRule()); }
	 ruleValExpr
{ after(grammarAccess.getValExprRule()); } 
	 EOF 
;

// Rule ValExpr
ruleValExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprAccess().getValExpr1ParserRuleCall()); }
		ruleValExpr1
		{ after(grammarAccess.getValExprAccess().getValExpr1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExpr1
entryRuleValExpr1
:
{ before(grammarAccess.getValExpr1Rule()); }
	 ruleValExpr1
{ after(grammarAccess.getValExpr1Rule()); } 
	 EOF 
;

// Rule ValExpr1
ruleValExpr1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExpr1Access().getAlternatives()); }
		(rule__ValExpr1__Alternatives)
		{ after(grammarAccess.getValExpr1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExpr2
entryRuleValExpr2
:
{ before(grammarAccess.getValExpr2Rule()); }
	 ruleValExpr2
{ after(grammarAccess.getValExpr2Rule()); } 
	 EOF 
;

// Rule ValExpr2
ruleValExpr2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExpr2Access().getAlternatives()); }
		(rule__ValExpr2__Alternatives)
		{ after(grammarAccess.getValExpr2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprUnaryOperator
entryRuleValExprUnaryOperator
:
{ before(grammarAccess.getValExprUnaryOperatorRule()); }
	 ruleValExprUnaryOperator
{ after(grammarAccess.getValExprUnaryOperatorRule()); } 
	 EOF 
;

// Rule ValExprUnaryOperator
ruleValExprUnaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprUnaryOperatorAccess().getGroup()); }
		(rule__ValExprUnaryOperator__Group__0)
		{ after(grammarAccess.getValExprUnaryOperatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSmallIdName
entryRuleSmallIdName
:
{ before(grammarAccess.getSmallIdNameRule()); }
	 ruleSmallIdName
{ after(grammarAccess.getSmallIdNameRule()); } 
	 EOF 
;

// Rule SmallIdName
ruleSmallIdName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSmallIdNameAccess().getNameAssignment()); }
		(rule__SmallIdName__NameAssignment)
		{ after(grammarAccess.getSmallIdNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprError
entryRuleValExprError
:
{ before(grammarAccess.getValExprErrorRule()); }
	 ruleValExprError
{ after(grammarAccess.getValExprErrorRule()); } 
	 EOF 
;

// Rule ValExprError
ruleValExprError 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprErrorAccess().getGroup()); }
		(rule__ValExprError__Group__0)
		{ after(grammarAccess.getValExprErrorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprIte
entryRuleValExprIte
:
{ before(grammarAccess.getValExprIteRule()); }
	 ruleValExprIte
{ after(grammarAccess.getValExprIteRule()); } 
	 EOF 
;

// Rule ValExprIte
ruleValExprIte 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprIteAccess().getGroup()); }
		(rule__ValExprIte__Group__0)
		{ after(grammarAccess.getValExprIteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprLet
entryRuleValExprLet
:
{ before(grammarAccess.getValExprLetRule()); }
	 ruleValExprLet
{ after(grammarAccess.getValExprLetRule()); } 
	 EOF 
;

// Rule ValExprLet
ruleValExprLet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprLetAccess().getGroup()); }
		(rule__ValExprLet__Group__0)
		{ after(grammarAccess.getValExprLetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprBracket
entryRuleValExprBracket
:
{ before(grammarAccess.getValExprBracketRule()); }
	 ruleValExprBracket
{ after(grammarAccess.getValExprBracketRule()); } 
	 EOF 
;

// Rule ValExprBracket
ruleValExprBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprBracketAccess().getGroup()); }
		(rule__ValExprBracket__Group__0)
		{ after(grammarAccess.getValExprBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprRegex
entryRuleValExprRegex
:
{ before(grammarAccess.getValExprRegexRule()); }
	 ruleValExprRegex
{ after(grammarAccess.getValExprRegexRule()); } 
	 EOF 
;

// Rule ValExprRegex
ruleValExprRegex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprRegexAccess().getGroup()); }
		(rule__ValExprRegex__Group__0)
		{ after(grammarAccess.getValExprRegexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprString
entryRuleValExprString
:
{ before(grammarAccess.getValExprStringRule()); }
	 ruleValExprString
{ after(grammarAccess.getValExprStringRule()); } 
	 EOF 
;

// Rule ValExprString
ruleValExprString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprStringAccess().getNameAssignment()); }
		(rule__ValExprString__NameAssignment)
		{ after(grammarAccess.getValExprStringAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprInteger
entryRuleValExprInteger
:
{ before(grammarAccess.getValExprIntegerRule()); }
	 ruleValExprInteger
{ after(grammarAccess.getValExprIntegerRule()); } 
	 EOF 
;

// Rule ValExprInteger
ruleValExprInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprIntegerAccess().getNameAssignment()); }
		(rule__ValExprInteger__NameAssignment)
		{ after(grammarAccess.getValExprIntegerAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprContructorCall
entryRuleValExprContructorCall
:
{ before(grammarAccess.getValExprContructorCallRule()); }
	 ruleValExprContructorCall
{ after(grammarAccess.getValExprContructorCallRule()); } 
	 EOF 
;

// Rule ValExprContructorCall
ruleValExprContructorCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprContructorCallAccess().getGroup()); }
		(rule__ValExprContructorCall__Group__0)
		{ after(grammarAccess.getValExprContructorCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValExprFunctionCall
entryRuleValExprFunctionCall
:
{ before(grammarAccess.getValExprFunctionCallRule()); }
	 ruleValExprFunctionCall
{ after(grammarAccess.getValExprFunctionCallRule()); } 
	 EOF 
;

// Rule ValExprFunctionCall
ruleValExprFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValExprFunctionCallAccess().getGroup()); }
		(rule__ValExprFunctionCall__Group__0)
		{ after(grammarAccess.getValExprFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructorName
entryRuleConstructorName
:
{ before(grammarAccess.getConstructorNameRule()); }
	 ruleConstructorName
{ after(grammarAccess.getConstructorNameRule()); } 
	 EOF 
;

// Rule ConstructorName
ruleConstructorName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorNameAccess().getNameAssignment()); }
		(rule__ConstructorName__NameAssignment)
		{ after(grammarAccess.getConstructorNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncName
entryRuleFuncName
:
{ before(grammarAccess.getFuncNameRule()); }
	 ruleFuncName
{ after(grammarAccess.getFuncNameRule()); } 
	 EOF 
;

// Rule FuncName
ruleFuncName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncNameAccess().getNameAssignment()); }
		(rule__FuncName__NameAssignment)
		{ after(grammarAccess.getFuncNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstName
entryRuleConstName
:
{ before(grammarAccess.getConstNameRule()); }
	 ruleConstName
{ after(grammarAccess.getConstNameRule()); } 
	 EOF 
;

// Rule ConstName
ruleConstName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstNameAccess().getNameAssignment()); }
		(rule__ConstName__NameAssignment)
		{ after(grammarAccess.getConstNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBIG_INT
entryRuleBIG_INT
:
{ before(grammarAccess.getBIG_INTRule()); }
	 ruleBIG_INT
{ after(grammarAccess.getBIG_INTRule()); } 
	 EOF 
;

// Rule BIG_INT
ruleBIG_INT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBIG_INTAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getBIG_INTAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTypeDefsAssignment_0()); }
		(rule__Model__TypeDefsAssignment_0)
		{ after(grammarAccess.getModelAccess().getTypeDefsAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getFuncDefsAssignment_1()); }
		(rule__Model__FuncDefsAssignment_1)
		{ after(grammarAccess.getModelAccess().getFuncDefsAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getConstDefsAssignment_2()); }
		(rule__Model__ConstDefsAssignment_2)
		{ after(grammarAccess.getModelAccess().getConstDefsAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getProcDefsAssignment_3()); }
		(rule__Model__ProcDefsAssignment_3)
		{ after(grammarAccess.getModelAccess().getProcDefsAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getStautDefsAssignment_4()); }
		(rule__Model__StautDefsAssignment_4)
		{ after(grammarAccess.getModelAccess().getStautDefsAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getChannelDefsAssignment_5()); }
		(rule__Model__ChannelDefsAssignment_5)
		{ after(grammarAccess.getModelAccess().getChannelDefsAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getModelDefAssignment_6()); }
		(rule__Model__ModelDefAssignment_6)
		{ after(grammarAccess.getModelAccess().getModelDefAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getMapperDefAssignment_7()); }
		(rule__Model__MapperDefAssignment_7)
		{ after(grammarAccess.getModelAccess().getMapperDefAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getCnectDefAssignment_8()); }
		(rule__Model__CnectDefAssignment_8)
		{ after(grammarAccess.getModelAccess().getCnectDefAssignment_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__CnectTypeAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCnectDefAccess().getCnectTypeCLIENTSOCKKeyword_3_0_0()); }
		'CLIENTSOCK'
		{ after(grammarAccess.getCnectDefAccess().getCnectTypeCLIENTSOCKKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCnectDefAccess().getCnectTypeSERVERSOCKKeyword_3_0_1()); }
		'SERVERSOCK'
		{ after(grammarAccess.getCnectDefAccess().getCnectTypeSERVERSOCKKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautItemsAccess().getStateItemsAssignment_1_0()); }
		(rule__StautItems__StateItemsAssignment_1_0)
		{ after(grammarAccess.getStautItemsAccess().getStateItemsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStautItemsAccess().getVarItemsAssignment_1_1()); }
		(rule__StautItems__VarItemsAssignment_1_1)
		{ after(grammarAccess.getStautItemsAccess().getVarItemsAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getStautItemsAccess().getInitItemsAssignment_1_2()); }
		(rule__StautItems__InitItemsAssignment_1_2)
		{ after(grammarAccess.getStautItemsAccess().getInitItemsAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getStautItemsAccess().getTransItemsAssignment_1_3()); }
		(rule__StautItems__TransItemsAssignment_1_3)
		{ after(grammarAccess.getStautItemsAccess().getTransItemsAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionItem__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionItemAccess().getConnectionOutParserRuleCall_0()); }
		ruleConnectionOut
		{ after(grammarAccess.getConnectionItemAccess().getConnectionOutParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionItemAccess().getConnectionInParserRuleCall_1()); }
		ruleConnectionIn
		{ after(grammarAccess.getConnectionItemAccess().getConnectionInParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionItemAccess().getEncodingParserRuleCall_2()); }
		ruleEncoding
		{ after(grammarAccess.getConnectionItemAccess().getEncodingParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConnectionItemAccess().getDecodingParserRuleCall_3()); }
		ruleDecoding
		{ after(grammarAccess.getConnectionItemAccess().getDecodingParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdNameAccess().getNameAssignment_0()); }
		(rule__IdName__NameAssignment_0)
		{ after(grammarAccess.getIdNameAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdNameAccess().getNameAssignment_1()); }
		(rule__IdName__NameAssignment_1)
		{ after(grammarAccess.getIdNameAccess().getNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_0()); }
		(rule__ProcessBehaviourLevel1__Group_1_0__0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_1()); }
		(rule__ProcessBehaviourLevel1__Group_1_1__0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_2()); }
		(rule__ProcessBehaviourLevel1__Group_1_2__0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_3()); }
		(rule__ProcessBehaviourLevel1__Group_1_3__0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Alternatives_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_1_3_0()); }
		(rule__ProcessBehaviourLevel1__Group_1_1_3_0__0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_1_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_1_3_1()); }
		(rule__ProcessBehaviourLevel1__Group_1_1_3_1__0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getGroup_1_1_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Alternatives_1_1_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getVarDeclsAssignment_1_1_3_0_1_0()); }
		(rule__ProcessBehaviourLevel1__VarDeclsAssignment_1_1_3_0_1_0)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getVarDeclsAssignment_1_1_3_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getVarNamesAssignment_1_1_3_0_1_1()); }
		(rule__ProcessBehaviourLevel1__VarNamesAssignment_1_1_3_0_1_1)
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getVarNamesAssignment_1_1_3_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getGroup_1_0()); }
		(rule__ProcessBehaviourLevel2__Group_1_0__0)
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getGroup_1_1()); }
		(rule__ProcessBehaviourLevel2__Group_1_1__0)
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getGroup_1_2()); }
		(rule__ProcessBehaviourLevel2__Group_1_2__0)
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel4__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourGuardedParserRuleCall_0()); }
		ruleProcessBehaviourGuarded
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourGuardedParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourStopParserRuleCall_1()); }
		ruleProcessBehaviourStop
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourStopParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourSequenceParserRuleCall_2()); }
		ruleProcessBehaviourSequence
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourSequenceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getProcCallParserRuleCall_3()); }
		ruleProcCall
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getProcCallParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourLetParserRuleCall_4()); }
		ruleProcessBehaviourLet
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourLetParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourHideParserRuleCall_5()); }
		ruleProcessBehaviourHide
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourHideParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourBracketParserRuleCall_6()); }
		ruleProcessBehaviourBracket
		{ after(grammarAccess.getProcessBehaviourLevel4Access().getProcessBehaviourBracketParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationAccess().getChannelNameAssignment_1_0_0()); }
		(rule__Communication__ChannelNameAssignment_1_0_0)
		{ after(grammarAccess.getCommunicationAccess().getChannelNameAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommunicationAccess().getExitAssignment_1_0_1()); }
		(rule__Communication__ExitAssignment_1_0_1)
		{ after(grammarAccess.getCommunicationAccess().getExitAssignment_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelOfferAccess().getGroup_0()); }
		(rule__ChannelOffer__Group_0__0)
		{ after(grammarAccess.getChannelOfferAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelOfferAccess().getGroup_1()); }
		(rule__ChannelOffer__Group_1__0)
		{ after(grammarAccess.getChannelOfferAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelOfferAccess().getVarDeclsAssignment_1_1_0()); }
		(rule__ChannelOffer__VarDeclsAssignment_1_1_0)
		{ after(grammarAccess.getChannelOfferAccess().getVarDeclsAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelOfferAccess().getVarNamesAssignment_1_1_1()); }
		(rule__ChannelOffer__VarNamesAssignment_1_1_1)
		{ after(grammarAccess.getChannelOfferAccess().getVarNamesAssignment_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarDeclAssignment_0_0()); }
		(rule__Assignment__VarDeclAssignment_0_0)
		{ after(grammarAccess.getAssignmentAccess().getVarDeclAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getVarNameAssignment_0_1()); }
		(rule__Assignment__VarNameAssignment_0_1)
		{ after(grammarAccess.getAssignmentAccess().getVarNameAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExpr1Access().getGroup_0()); }
		(rule__ValExpr1__Group_0__0)
		{ after(grammarAccess.getValExpr1Access().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr1Access().getValExprLetParserRuleCall_1()); }
		ruleValExprLet
		{ after(grammarAccess.getValExpr1Access().getValExprLetParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr1Access().getValExprIteParserRuleCall_2()); }
		ruleValExprIte
		{ after(grammarAccess.getValExpr1Access().getValExprIteParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExpr1Access().getGroup_0_1_0()); }
		(rule__ValExpr1__Group_0_1_0__0)
		{ after(grammarAccess.getValExpr1Access().getGroup_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr1Access().getGroup_0_1_1()); }
		(rule__ValExpr1__Group_0_1_1__0)
		{ after(grammarAccess.getValExpr1Access().getGroup_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExpr2Access().getSmallIdNameParserRuleCall_0()); }
		ruleSmallIdName
		{ after(grammarAccess.getValExpr2Access().getSmallIdNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprUnaryOperatorParserRuleCall_1()); }
		ruleValExprUnaryOperator
		{ after(grammarAccess.getValExpr2Access().getValExprUnaryOperatorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprFunctionCallParserRuleCall_2()); }
		ruleValExprFunctionCall
		{ after(grammarAccess.getValExpr2Access().getValExprFunctionCallParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprContructorCallParserRuleCall_3()); }
		ruleValExprContructorCall
		{ after(grammarAccess.getValExpr2Access().getValExprContructorCallParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprIntegerParserRuleCall_4()); }
		ruleValExprInteger
		{ after(grammarAccess.getValExpr2Access().getValExprIntegerParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprStringParserRuleCall_5()); }
		ruleValExprString
		{ after(grammarAccess.getValExpr2Access().getValExprStringParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprRegexParserRuleCall_6()); }
		ruleValExprRegex
		{ after(grammarAccess.getValExpr2Access().getValExprRegexParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprBracketParserRuleCall_7()); }
		ruleValExprBracket
		{ after(grammarAccess.getValExpr2Access().getValExprBracketParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getValExpr2Access().getValExprErrorParserRuleCall_8()); }
		ruleValExprError
		{ after(grammarAccess.getValExpr2Access().getValExprErrorParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefs__Group__0__Impl
	rule__TypeDefs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefsAccess().getTYPEDEFKeyword_0()); }
	'TYPEDEF'
	{ after(grammarAccess.getTypeDefsAccess().getTYPEDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefs__Group__1__Impl
	rule__TypeDefs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefsAccess().getTypeDefsAssignment_1()); }
	(rule__TypeDefs__TypeDefsAssignment_1)
	{ after(grammarAccess.getTypeDefsAccess().getTypeDefsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefs__Group__2__Impl
	rule__TypeDefs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefsAccess().getGroup_2()); }
	(rule__TypeDefs__Group_2__0)*
	{ after(grammarAccess.getTypeDefsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefsAccess().getENDDEFKeyword_3()); }
	'ENDDEF'
	{ after(grammarAccess.getTypeDefsAccess().getENDDEFKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefs__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefs__Group_2__0__Impl
	rule__TypeDefs__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefsAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getTypeDefsAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefs__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefsAccess().getTypeDefsAssignment_2_1()); }
	(rule__TypeDefs__TypeDefsAssignment_2_1)
	{ after(grammarAccess.getTypeDefsAccess().getTypeDefsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getNameAssignment_0()); }
	(rule__TypeDef__NameAssignment_0)
	{ after(grammarAccess.getTypeDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
	rule__TypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getColonColonEqualsSignKeyword_1()); }
	'::='
	{ after(grammarAccess.getTypeDefAccess().getColonColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getNeConstructorListAssignment_2()); }
	(rule__TypeDef__NeConstructorListAssignment_2)
	{ after(grammarAccess.getTypeDefAccess().getNeConstructorListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDefs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefs__Group__0__Impl
	rule__FuncDefs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefsAccess().getFUNCDEFKeyword_0()); }
	'FUNCDEF'
	{ after(grammarAccess.getFuncDefsAccess().getFUNCDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefs__Group__1__Impl
	rule__FuncDefs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefsAccess().getFuncDefsAssignment_1()); }
	(rule__FuncDefs__FuncDefsAssignment_1)
	{ after(grammarAccess.getFuncDefsAccess().getFuncDefsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefs__Group__2__Impl
	rule__FuncDefs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefsAccess().getGroup_2()); }
	(rule__FuncDefs__Group_2__0)*
	{ after(grammarAccess.getFuncDefsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefsAccess().getENDDEFKeyword_3()); }
	'ENDDEF'
	{ after(grammarAccess.getFuncDefsAccess().getENDDEFKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDefs__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefs__Group_2__0__Impl
	rule__FuncDefs__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefsAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getFuncDefsAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefs__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefsAccess().getFuncDefsAssignment_2_1()); }
	(rule__FuncDefs__FuncDefsAssignment_2_1)
	{ after(grammarAccess.getFuncDefsAccess().getFuncDefsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__0__Impl
	rule__FuncDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getFuncNameAssignment_0()); }
	(rule__FuncDef__FuncNameAssignment_0)
	{ after(grammarAccess.getFuncDefAccess().getFuncNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__1__Impl
	rule__FuncDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFuncDefAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__2__Impl
	rule__FuncDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getNeVarsDelarationListAssignment_2()); }
	(rule__FuncDef__NeVarsDelarationListAssignment_2)
	{ after(grammarAccess.getFuncDefAccess().getNeVarsDelarationListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__3__Impl
	rule__FuncDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFuncDefAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__4__Impl
	rule__FuncDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getColonColonKeyword_4()); }
	'::'
	{ after(grammarAccess.getFuncDefAccess().getColonColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__5__Impl
	rule__FuncDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getTypeNameAssignment_5()); }
	(rule__FuncDef__TypeNameAssignment_5)
	{ after(grammarAccess.getFuncDefAccess().getTypeNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__6__Impl
	rule__FuncDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getColonColonEqualsSignKeyword_6()); }
	'::='
	{ after(grammarAccess.getFuncDefAccess().getColonColonEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDef__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefAccess().getValExprAssignment_7()); }
	(rule__FuncDef__ValExprAssignment_7)
	{ after(grammarAccess.getFuncDefAccess().getValExprAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDefs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDefs__Group__0__Impl
	rule__ConstDefs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefsAccess().getCONSTDEFKeyword_0()); }
	'CONSTDEF'
	{ after(grammarAccess.getConstDefsAccess().getCONSTDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDefs__Group__1__Impl
	rule__ConstDefs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefsAccess().getConstDefsAssignment_1()); }
	(rule__ConstDefs__ConstDefsAssignment_1)
	{ after(grammarAccess.getConstDefsAccess().getConstDefsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDefs__Group__2__Impl
	rule__ConstDefs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefsAccess().getGroup_2()); }
	(rule__ConstDefs__Group_2__0)*
	{ after(grammarAccess.getConstDefsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDefs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefsAccess().getENDDEFKeyword_3()); }
	'ENDDEF'
	{ after(grammarAccess.getConstDefsAccess().getENDDEFKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDefs__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDefs__Group_2__0__Impl
	rule__ConstDefs__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefsAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getConstDefsAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDefs__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefsAccess().getConstDefsAssignment_2_1()); }
	(rule__ConstDefs__ConstDefsAssignment_2_1)
	{ after(grammarAccess.getConstDefsAccess().getConstDefsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDef__Group__0__Impl
	rule__ConstDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefAccess().getNameAssignment_0()); }
	(rule__ConstDef__NameAssignment_0)
	{ after(grammarAccess.getConstDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDef__Group__1__Impl
	rule__ConstDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getConstDefAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDef__Group__2__Impl
	rule__ConstDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefAccess().getTypeNameAssignment_2()); }
	(rule__ConstDef__TypeNameAssignment_2)
	{ after(grammarAccess.getConstDefAccess().getTypeNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDef__Group__3__Impl
	rule__ConstDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefAccess().getColonColonEqualsSignKeyword_3()); }
	'::='
	{ after(grammarAccess.getConstDefAccess().getColonColonEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDefAccess().getValExprAssignment_4()); }
	(rule__ConstDef__ValExprAssignment_4)
	{ after(grammarAccess.getConstDefAccess().getValExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcDefs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDefs__Group__0__Impl
	rule__ProcDefs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefsAccess().getPROCDEFKeyword_0()); }
	'PROCDEF'
	{ after(grammarAccess.getProcDefsAccess().getPROCDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDefs__Group__1__Impl
	rule__ProcDefs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefsAccess().getProcDefsAssignment_1()); }
	(rule__ProcDefs__ProcDefsAssignment_1)
	{ after(grammarAccess.getProcDefsAccess().getProcDefsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDefs__Group__2__Impl
	rule__ProcDefs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefsAccess().getGroup_2()); }
	(rule__ProcDefs__Group_2__0)*
	{ after(grammarAccess.getProcDefsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDefs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefsAccess().getENDDEFKeyword_3()); }
	'ENDDEF'
	{ after(grammarAccess.getProcDefsAccess().getENDDEFKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcDefs__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDefs__Group_2__0__Impl
	rule__ProcDefs__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefsAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getProcDefsAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDefs__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefsAccess().getProcDefsAssignment_2_1()); }
	(rule__ProcDefs__ProcDefsAssignment_2_1)
	{ after(grammarAccess.getProcDefsAccess().getProcDefsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__0__Impl
	rule__ProcDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getNameAssignment_0()); }
	(rule__ProcDef__NameAssignment_0)
	{ after(grammarAccess.getProcDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__1__Impl
	rule__ProcDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getProcDefAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__2__Impl
	rule__ProcDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getNeChannelDeclListAssignment_2()); }
	(rule__ProcDef__NeChannelDeclListAssignment_2)?
	{ after(grammarAccess.getProcDefAccess().getNeChannelDeclListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__3__Impl
	rule__ProcDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getProcDefAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__4__Impl
	rule__ProcDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getProcDefAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__5__Impl
	rule__ProcDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getNeVarDeclListAssignment_5()); }
	(rule__ProcDef__NeVarDeclListAssignment_5)?
	{ after(grammarAccess.getProcDefAccess().getNeVarDeclListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__6__Impl
	rule__ProcDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getProcDefAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__7__Impl
	rule__ProcDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getExitDeclAssignment_7()); }
	(rule__ProcDef__ExitDeclAssignment_7)?
	{ after(grammarAccess.getProcDefAccess().getExitDeclAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__8__Impl
	rule__ProcDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getColonColonEqualsSignKeyword_8()); }
	'::='
	{ after(grammarAccess.getProcDefAccess().getColonColonEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcDef__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcDefAccess().getProcessBehaviourAssignment_9()); }
	(rule__ProcDef__ProcessBehaviourAssignment_9)
	{ after(grammarAccess.getProcDefAccess().getProcessBehaviourAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StautDefs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDefs__Group__0__Impl
	rule__StautDefs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefsAccess().getSTAUTDEFKeyword_0()); }
	'STAUTDEF'
	{ after(grammarAccess.getStautDefsAccess().getSTAUTDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDefs__Group__1__Impl
	rule__StautDefs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefsAccess().getStautDefsAssignment_1()); }
	(rule__StautDefs__StautDefsAssignment_1)
	{ after(grammarAccess.getStautDefsAccess().getStautDefsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDefs__Group__2__Impl
	rule__StautDefs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefsAccess().getGroup_2()); }
	(rule__StautDefs__Group_2__0)*
	{ after(grammarAccess.getStautDefsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDefs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefsAccess().getENDDEFKeyword_3()); }
	'ENDDEF'
	{ after(grammarAccess.getStautDefsAccess().getENDDEFKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StautDefs__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDefs__Group_2__0__Impl
	rule__StautDefs__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefsAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getStautDefsAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDefs__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefsAccess().getStautDefsAssignment_2_1()); }
	(rule__StautDefs__StautDefsAssignment_2_1)
	{ after(grammarAccess.getStautDefsAccess().getStautDefsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StautDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__0__Impl
	rule__StautDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getNameAssignment_0()); }
	(rule__StautDef__NameAssignment_0)
	{ after(grammarAccess.getStautDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__1__Impl
	rule__StautDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getStautDefAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__2__Impl
	rule__StautDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getNeChannelDeclListAssignment_2()); }
	(rule__StautDef__NeChannelDeclListAssignment_2)?
	{ after(grammarAccess.getStautDefAccess().getNeChannelDeclListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__3__Impl
	rule__StautDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getStautDefAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__4__Impl
	rule__StautDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getStautDefAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__5__Impl
	rule__StautDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getNeVarDeclListAssignment_5()); }
	(rule__StautDef__NeVarDeclListAssignment_5)?
	{ after(grammarAccess.getStautDefAccess().getNeVarDeclListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__6__Impl
	rule__StautDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getStautDefAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__7__Impl
	rule__StautDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getExitDeclAssignment_7()); }
	(rule__StautDef__ExitDeclAssignment_7)?
	{ after(grammarAccess.getStautDefAccess().getExitDeclAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__8__Impl
	rule__StautDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getColonColonEqualsSignKeyword_8()); }
	'::='
	{ after(grammarAccess.getStautDefAccess().getColonColonEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautDef__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautDefAccess().getStautItemsAssignment_9()); }
	(rule__StautDef__StautItemsAssignment_9)
	{ after(grammarAccess.getStautDefAccess().getStautItemsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDefs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelDefs__Group__0__Impl
	rule__ChannelDefs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDefs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelDefsAccess().getCHANDEFKeyword_0()); }
	'CHANDEF'
	{ after(grammarAccess.getChannelDefsAccess().getCHANDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDefs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelDefs__Group__1__Impl
	rule__ChannelDefs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDefs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelDefsAccess().getChannelDefsAssignment_1()); }
	(rule__ChannelDefs__ChannelDefsAssignment_1)
	{ after(grammarAccess.getChannelDefsAccess().getChannelDefsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDefs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelDefs__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDefs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelDefsAccess().getENDDEFKeyword_2()); }
	'ENDDEF'
	{ after(grammarAccess.getChannelDefsAccess().getENDDEFKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelDef__Group__0__Impl
	rule__ChannelDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelDefAccess().getNameAssignment_0()); }
	(rule__ChannelDef__NameAssignment_0)
	{ after(grammarAccess.getChannelDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelDef__Group__1__Impl
	rule__ChannelDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelDefAccess().getColonColonEqualsSignKeyword_1()); }
	'::='
	{ after(grammarAccess.getChannelDefAccess().getColonColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelDefAccess().getNeChannelDeclListAssignment_2()); }
	(rule__ChannelDef__NeChannelDeclListAssignment_2)
	{ after(grammarAccess.getChannelDefAccess().getNeChannelDeclListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__0__Impl
	rule__ModelDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getMODELDEFKeyword_0()); }
	'MODELDEF'
	{ after(grammarAccess.getModelDefAccess().getMODELDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__1__Impl
	rule__ModelDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getModelNameAssignment_1()); }
	(rule__ModelDef__ModelNameAssignment_1)
	{ after(grammarAccess.getModelDefAccess().getModelNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__2__Impl
	rule__ModelDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getColonColonEqualsSignKeyword_2()); }
	'::='
	{ after(grammarAccess.getModelDefAccess().getColonColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__3__Impl
	rule__ModelDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getCHANKeyword_3()); }
	'CHAN'
	{ after(grammarAccess.getModelDefAccess().getCHANKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__4__Impl
	rule__ModelDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getModelDefAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__5__Impl
	rule__ModelDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getNeInputChannelNameListAssignment_5()); }
	(rule__ModelDef__NeInputChannelNameListAssignment_5)?
	{ after(grammarAccess.getModelDefAccess().getNeInputChannelNameListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__6__Impl
	rule__ModelDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getCHANKeyword_6()); }
	'CHAN'
	{ after(grammarAccess.getModelDefAccess().getCHANKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__7__Impl
	rule__ModelDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getOUTKeyword_7()); }
	'OUT'
	{ after(grammarAccess.getModelDefAccess().getOUTKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__8__Impl
	rule__ModelDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getNeOutputChannelNameListAssignment_8()); }
	(rule__ModelDef__NeOutputChannelNameListAssignment_8)?
	{ after(grammarAccess.getModelDefAccess().getNeOutputChannelNameListAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__9__Impl
	rule__ModelDef__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getBEHAVIOURKeyword_9()); }
	'BEHAVIOUR'
	{ after(grammarAccess.getModelDefAccess().getBEHAVIOURKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__10__Impl
	rule__ModelDef__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getProcessBehaviourAssignment_10()); }
	(rule__ModelDef__ProcessBehaviourAssignment_10)
	{ after(grammarAccess.getModelDefAccess().getProcessBehaviourAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelDef__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelDefAccess().getENDDEFKeyword_11()); }
	'ENDDEF'
	{ after(grammarAccess.getModelDefAccess().getENDDEFKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapperDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__0__Impl
	rule__MapperDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getMAPPERDEFKeyword_0()); }
	'MAPPERDEF'
	{ after(grammarAccess.getMapperDefAccess().getMAPPERDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__1__Impl
	rule__MapperDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getMapperNameAssignment_1()); }
	(rule__MapperDef__MapperNameAssignment_1)
	{ after(grammarAccess.getMapperDefAccess().getMapperNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__2__Impl
	rule__MapperDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getColonColonEqualsSignKeyword_2()); }
	'::='
	{ after(grammarAccess.getMapperDefAccess().getColonColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__3__Impl
	rule__MapperDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getCHANKeyword_3()); }
	'CHAN'
	{ after(grammarAccess.getMapperDefAccess().getCHANKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__4__Impl
	rule__MapperDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getMapperDefAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__5__Impl
	rule__MapperDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getChanInNeChannelsDeclListAssignment_5()); }
	(rule__MapperDef__ChanInNeChannelsDeclListAssignment_5)?
	{ after(grammarAccess.getMapperDefAccess().getChanInNeChannelsDeclListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__6__Impl
	rule__MapperDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getCHANKeyword_6()); }
	'CHAN'
	{ after(grammarAccess.getMapperDefAccess().getCHANKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__7__Impl
	rule__MapperDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getOUTKeyword_7()); }
	'OUT'
	{ after(grammarAccess.getMapperDefAccess().getOUTKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__8__Impl
	rule__MapperDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getChanOutNeChannelsDeclListAssignment_8()); }
	(rule__MapperDef__ChanOutNeChannelsDeclListAssignment_8)?
	{ after(grammarAccess.getMapperDefAccess().getChanOutNeChannelsDeclListAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__9__Impl
	rule__MapperDef__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getBEHAVIOURKeyword_9()); }
	'BEHAVIOUR'
	{ after(grammarAccess.getMapperDefAccess().getBEHAVIOURKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__10__Impl
	rule__MapperDef__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getProcessBehaviourAssignment_10()); }
	(rule__MapperDef__ProcessBehaviourAssignment_10)
	{ after(grammarAccess.getMapperDefAccess().getProcessBehaviourAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapperDef__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapperDefAccess().getENDDEFKeyword_11()); }
	'ENDDEF'
	{ after(grammarAccess.getMapperDefAccess().getENDDEFKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CnectDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CnectDef__Group__0__Impl
	rule__CnectDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCnectDefAccess().getCNECTDEFKeyword_0()); }
	'CNECTDEF'
	{ after(grammarAccess.getCnectDefAccess().getCNECTDEFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CnectDef__Group__1__Impl
	rule__CnectDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCnectDefAccess().getCnectNameAssignment_1()); }
	(rule__CnectDef__CnectNameAssignment_1)
	{ after(grammarAccess.getCnectDefAccess().getCnectNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CnectDef__Group__2__Impl
	rule__CnectDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCnectDefAccess().getColonColonEqualsSignKeyword_2()); }
	'::='
	{ after(grammarAccess.getCnectDefAccess().getColonColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CnectDef__Group__3__Impl
	rule__CnectDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCnectDefAccess().getCnectTypeAssignment_3()); }
	(rule__CnectDef__CnectTypeAssignment_3)
	{ after(grammarAccess.getCnectDefAccess().getCnectTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CnectDef__Group__4__Impl
	rule__CnectDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCnectDefAccess().getConnectionItemsAssignment_4()); }
	(rule__CnectDef__ConnectionItemsAssignment_4)*
	{ after(grammarAccess.getCnectDefAccess().getConnectionItemsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CnectDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCnectDefAccess().getENDDEFKeyword_5()); }
	'ENDDEF'
	{ after(grammarAccess.getCnectDefAccess().getENDDEFKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StautItems__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautItems__Group__0__Impl
	rule__StautItems__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautItemsAccess().getStautItemsAction_0()); }
	()
	{ after(grammarAccess.getStautItemsAccess().getStautItemsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StautItems__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStautItemsAccess().getAlternatives_1()); }
	(rule__StautItems__Alternatives_1)*
	{ after(grammarAccess.getStautItemsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateItem__Group__0__Impl
	rule__StateItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateItemAccess().getSTATEKeyword_0()); }
	'STATE'
	{ after(grammarAccess.getStateItemAccess().getSTATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateItemAccess().getListAssignment_1()); }
	(rule__StateItem__ListAssignment_1)
	{ after(grammarAccess.getStateItemAccess().getListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarItem__Group__0__Impl
	rule__VarItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarItemAccess().getVarItemAction_0()); }
	()
	{ after(grammarAccess.getVarItemAccess().getVarItemAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarItem__Group__1__Impl
	rule__VarItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarItemAccess().getVARKeyword_1()); }
	'VAR'
	{ after(grammarAccess.getVarItemAccess().getVARKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarItemAccess().getNeVarsDelarationListAssignment_2()); }
	(rule__VarItem__NeVarsDelarationListAssignment_2)?
	{ after(grammarAccess.getVarItemAccess().getNeVarsDelarationListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitItem__Group__0__Impl
	rule__InitItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitItemAccess().getINITKeyword_0()); }
	'INIT'
	{ after(grammarAccess.getInitItemAccess().getINITKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitItem__Group__1__Impl
	rule__InitItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitItemAccess().getIdNameAssignment_1()); }
	(rule__InitItem__IdNameAssignment_1)
	{ after(grammarAccess.getInitItemAccess().getIdNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitItemAccess().getUpdateListAssignment_2()); }
	(rule__InitItem__UpdateListAssignment_2)?
	{ after(grammarAccess.getInitItemAccess().getUpdateListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransItem__Group__0__Impl
	rule__TransItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransItemAccess().getTRANSKeyword_0()); }
	'TRANS'
	{ after(grammarAccess.getTransItemAccess().getTRANSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransItem__Group__1__Impl
	rule__TransItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransItemAccess().getTransitionsAssignment_1()); }
	(rule__TransItem__TransitionsAssignment_1)
	{ after(grammarAccess.getTransItemAccess().getTransitionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransItemAccess().getGroup_2()); }
	(rule__TransItem__Group_2__0)*
	{ after(grammarAccess.getTransItemAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransItem__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransItem__Group_2__0__Impl
	rule__TransItem__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransItemAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getTransItemAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransItem__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransItemAccess().getTransitionsAssignment_2_1()); }
	(rule__TransItem__TransitionsAssignment_2_1)
	{ after(grammarAccess.getTransItemAccess().getTransitionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getFromNameAssignment_0()); }
	(rule__Transition__FromNameAssignment_0)
	{ after(grammarAccess.getTransitionAccess().getFromNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getConditionalCommunicationsAssignment_2()); }
	(rule__Transition__ConditionalCommunicationsAssignment_2)
	{ after(grammarAccess.getTransitionAccess().getConditionalCommunicationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getUpdateListAssignment_3()); }
	(rule__Transition__UpdateListAssignment_3)?
	{ after(grammarAccess.getTransitionAccess().getUpdateListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
	'->'
	{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getToNameAssignment_5()); }
	(rule__Transition__ToNameAssignment_5)
	{ after(grammarAccess.getTransitionAccess().getToNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateList__Group__0__Impl
	rule__UpdateList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateListAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getUpdateListAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateList__Group__1__Impl
	rule__UpdateList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateListAccess().getUpdatesAssignment_1()); }
	(rule__UpdateList__UpdatesAssignment_1)
	{ after(grammarAccess.getUpdateListAccess().getUpdatesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateList__Group__2__Impl
	rule__UpdateList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateListAccess().getGroup_2()); }
	(rule__UpdateList__Group_2__0)*
	{ after(grammarAccess.getUpdateListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateListAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getUpdateListAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateList__Group_2__0__Impl
	rule__UpdateList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateListAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getUpdateListAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateListAccess().getUpdatesAssignment_2_1()); }
	(rule__UpdateList__UpdatesAssignment_2_1)
	{ after(grammarAccess.getUpdateListAccess().getUpdatesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getVarNameAssignment_0()); }
	(rule__Update__VarNameAssignment_0)
	{ after(grammarAccess.getUpdateAccess().getVarNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getValExprAssignment_2()); }
	(rule__Update__ValExprAssignment_2)
	{ after(grammarAccess.getUpdateAccess().getValExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeConstructorList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeConstructorList__Group__0__Impl
	rule__NeConstructorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeConstructorListAccess().getConstructorsAssignment_0()); }
	(rule__NeConstructorList__ConstructorsAssignment_0)
	{ after(grammarAccess.getNeConstructorListAccess().getConstructorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeConstructorList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeConstructorListAccess().getGroup_1()); }
	(rule__NeConstructorList__Group_1__0)*
	{ after(grammarAccess.getNeConstructorListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeConstructorList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeConstructorList__Group_1__0__Impl
	rule__NeConstructorList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeConstructorListAccess().getVerticalLineKeyword_1_0()); }
	'|'
	{ after(grammarAccess.getNeConstructorListAccess().getVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeConstructorList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeConstructorListAccess().getConstructorAssignment_1_1()); }
	(rule__NeConstructorList__ConstructorAssignment_1_1)
	{ after(grammarAccess.getNeConstructorListAccess().getConstructorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getNameAssignment_0()); }
	(rule__Constructor__NameAssignment_0)
	{ after(grammarAccess.getConstructorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getGroup_1()); }
	(rule__Constructor__Group_1__0)?
	{ after(grammarAccess.getConstructorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_1__0__Impl
	rule__Constructor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_1__1__Impl
	rule__Constructor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getNeFieldsListAssignment_1_1()); }
	(rule__Constructor__NeFieldsListAssignment_1_1)
	{ after(grammarAccess.getConstructorAccess().getNeFieldsListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeFieldList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldList__Group__0__Impl
	rule__NeFieldList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldListAccess().getFieldsAssignment_0()); }
	(rule__NeFieldList__FieldsAssignment_0)
	{ after(grammarAccess.getNeFieldListAccess().getFieldsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldListAccess().getGroup_1()); }
	(rule__NeFieldList__Group_1__0)*
	{ after(grammarAccess.getNeFieldListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeFieldList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldList__Group_1__0__Impl
	rule__NeFieldList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldListAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getNeFieldListAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldListAccess().getFieldsAssignment_1_1()); }
	(rule__NeFieldList__FieldsAssignment_1_1)
	{ after(grammarAccess.getNeFieldListAccess().getFieldsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fields__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fields__Group__0__Impl
	rule__Fields__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldsAccess().getNeFieldNameListAssignment_0()); }
	(rule__Fields__NeFieldNameListAssignment_0)
	{ after(grammarAccess.getFieldsAccess().getNeFieldNameListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fields__Group__1__Impl
	rule__Fields__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldsAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getFieldsAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fields__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldsAccess().getTypeNameAssignment_2()); }
	(rule__Fields__TypeNameAssignment_2)
	{ after(grammarAccess.getFieldsAccess().getTypeNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeFieldNameList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldNameList__Group__0__Impl
	rule__NeFieldNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldNameListAccess().getFieldNamesAssignment_0()); }
	(rule__NeFieldNameList__FieldNamesAssignment_0)
	{ after(grammarAccess.getNeFieldNameListAccess().getFieldNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldNameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldNameListAccess().getGroup_1()); }
	(rule__NeFieldNameList__Group_1__0)*
	{ after(grammarAccess.getNeFieldNameListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeFieldNameList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldNameList__Group_1__0__Impl
	rule__NeFieldNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldNameListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNeFieldNameListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeFieldNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeFieldNameListAccess().getFieldNamesAssignment_1_1()); }
	(rule__NeFieldNameList__FieldNamesAssignment_1_1)
	{ after(grammarAccess.getNeFieldNameListAccess().getFieldNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExitDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitDecl__Group__0__Impl
	rule__ExitDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitDeclAccess().getExitAssignment_0()); }
	(rule__ExitDecl__ExitAssignment_0)
	{ after(grammarAccess.getExitDeclAccess().getExitAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitDeclAccess().getGroup_1()); }
	(rule__ExitDecl__Group_1__0)?
	{ after(grammarAccess.getExitDeclAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExitDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitDecl__Group_1__0__Impl
	rule__ExitDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitDeclAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getExitDeclAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitDeclAccess().getNeTypeNameListAssignment_1_1()); }
	(rule__ExitDecl__NeTypeNameListAssignment_1_1)
	{ after(grammarAccess.getExitDeclAccess().getNeTypeNameListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionOut__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionOut__Group__0__Impl
	rule__ConnectionOut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionOutAccess().getCHANKeyword_0()); }
	'CHAN'
	{ after(grammarAccess.getConnectionOutAccess().getCHANKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionOut__Group__1__Impl
	rule__ConnectionOut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionOutAccess().getOUTKeyword_1()); }
	'OUT'
	{ after(grammarAccess.getConnectionOutAccess().getOUTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionOut__Group__2__Impl
	rule__ConnectionOut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionOutAccess().getChannelsDeclAssignment_2()); }
	(rule__ConnectionOut__ChannelsDeclAssignment_2)
	{ after(grammarAccess.getConnectionOutAccess().getChannelsDeclAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionOut__Group__3__Impl
	rule__ConnectionOut__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionOutAccess().getHOSTKeyword_3()); }
	'HOST'
	{ after(grammarAccess.getConnectionOutAccess().getHOSTKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionOut__Group__4__Impl
	rule__ConnectionOut__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionOutAccess().getHostNameAssignment_4()); }
	(rule__ConnectionOut__HostNameAssignment_4)
	{ after(grammarAccess.getConnectionOutAccess().getHostNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionOut__Group__5__Impl
	rule__ConnectionOut__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionOutAccess().getPORTKeyword_5()); }
	'PORT'
	{ after(grammarAccess.getConnectionOutAccess().getPORTKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionOut__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionOutAccess().getPortNumberAssignment_6()); }
	(rule__ConnectionOut__PortNumberAssignment_6)
	{ after(grammarAccess.getConnectionOutAccess().getPortNumberAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionIn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionIn__Group__0__Impl
	rule__ConnectionIn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionInAccess().getCHANKeyword_0()); }
	'CHAN'
	{ after(grammarAccess.getConnectionInAccess().getCHANKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionIn__Group__1__Impl
	rule__ConnectionIn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionInAccess().getINKeyword_1()); }
	'IN'
	{ after(grammarAccess.getConnectionInAccess().getINKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionIn__Group__2__Impl
	rule__ConnectionIn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionInAccess().getChannelsDeclAssignment_2()); }
	(rule__ConnectionIn__ChannelsDeclAssignment_2)
	{ after(grammarAccess.getConnectionInAccess().getChannelsDeclAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionIn__Group__3__Impl
	rule__ConnectionIn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionInAccess().getHOSTKeyword_3()); }
	'HOST'
	{ after(grammarAccess.getConnectionInAccess().getHOSTKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionIn__Group__4__Impl
	rule__ConnectionIn__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionInAccess().getHostNameAssignment_4()); }
	(rule__ConnectionIn__HostNameAssignment_4)
	{ after(grammarAccess.getConnectionInAccess().getHostNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionIn__Group__5__Impl
	rule__ConnectionIn__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionInAccess().getPORTKeyword_5()); }
	'PORT'
	{ after(grammarAccess.getConnectionInAccess().getPORTKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectionIn__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionInAccess().getPortNumberAssignment_6()); }
	(rule__ConnectionIn__PortNumberAssignment_6)
	{ after(grammarAccess.getConnectionInAccess().getPortNumberAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Encoding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group__0__Impl
	rule__Encoding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getENCODEKeyword_0()); }
	'ENCODE'
	{ after(grammarAccess.getEncodingAccess().getENCODEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group__1__Impl
	rule__Encoding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getCommunicationAssignment_1()); }
	(rule__Encoding__CommunicationAssignment_1)
	{ after(grammarAccess.getEncodingAccess().getCommunicationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group__2__Impl
	rule__Encoding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getEncodingAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Encoding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEncodingAccess().getChannelOfferAssignment_3()); }
	(rule__Encoding__ChannelOfferAssignment_3)
	{ after(grammarAccess.getEncodingAccess().getChannelOfferAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decoding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decoding__Group__0__Impl
	rule__Decoding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecodingAccess().getDECODEKeyword_0()); }
	'DECODE'
	{ after(grammarAccess.getDecodingAccess().getDECODEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decoding__Group__1__Impl
	rule__Decoding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecodingAccess().getCommunicationAssignment_1()); }
	(rule__Decoding__CommunicationAssignment_1)
	{ after(grammarAccess.getDecodingAccess().getCommunicationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decoding__Group__2__Impl
	rule__Decoding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecodingAccess().getLessThanSignHyphenMinusKeyword_2()); }
	'<-'
	{ after(grammarAccess.getDecodingAccess().getLessThanSignHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decoding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecodingAccess().getChannelOfferAssignment_3()); }
	(rule__Decoding__ChannelOfferAssignment_3)
	{ after(grammarAccess.getDecodingAccess().getChannelOfferAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeVarsDeclarationList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarsDeclarationList__Group__0__Impl
	rule__NeVarsDeclarationList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsAssignment_0()); }
	(rule__NeVarsDeclarationList__VarsDeclarationsAssignment_0)
	{ after(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarsDeclarationList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarsDeclarationListAccess().getGroup_1()); }
	(rule__NeVarsDeclarationList__Group_1__0)*
	{ after(grammarAccess.getNeVarsDeclarationListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeVarsDeclarationList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarsDeclarationList__Group_1__0__Impl
	rule__NeVarsDeclarationList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarsDeclarationListAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getNeVarsDeclarationListAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarsDeclarationList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsAssignment_1_1()); }
	(rule__NeVarsDeclarationList__VarsDeclarationsAssignment_1_1)
	{ after(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarsDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsDeclaration__Group__0__Impl
	rule__VarsDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsDeclarationAccess().getNeVarNameListAssignment_0()); }
	(rule__VarsDeclaration__NeVarNameListAssignment_0)
	{ after(grammarAccess.getVarsDeclarationAccess().getNeVarNameListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsDeclaration__Group__1__Impl
	rule__VarsDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsDeclarationAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getVarsDeclarationAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsDeclarationAccess().getTypeNameAssignment_2()); }
	(rule__VarsDeclaration__TypeNameAssignment_2)
	{ after(grammarAccess.getVarsDeclarationAccess().getTypeNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeVarDeclList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarDeclList__Group__0__Impl
	rule__NeVarDeclList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarDeclListAccess().getVarsDeclsAssignment_0()); }
	(rule__NeVarDeclList__VarsDeclsAssignment_0)
	{ after(grammarAccess.getNeVarDeclListAccess().getVarsDeclsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarDeclList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarDeclListAccess().getGroup_1()); }
	(rule__NeVarDeclList__Group_1__0)*
	{ after(grammarAccess.getNeVarDeclListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeVarDeclList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarDeclList__Group_1__0__Impl
	rule__NeVarDeclList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarDeclListAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getNeVarDeclListAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarDeclList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarDeclListAccess().getVarsDeclsAssignment_1_1()); }
	(rule__NeVarDeclList__VarsDeclsAssignment_1_1)
	{ after(grammarAccess.getNeVarDeclListAccess().getVarsDeclsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarsDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsDecl__Group__0__Impl
	rule__VarsDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsDeclAccess().getNeVarNameListAssignment_0()); }
	(rule__VarsDecl__NeVarNameListAssignment_0)
	{ after(grammarAccess.getVarsDeclAccess().getNeVarNameListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsDecl__Group__1__Impl
	rule__VarsDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsDeclAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getVarsDeclAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarsDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsDeclAccess().getTypeNameAssignment_2()); }
	(rule__VarsDecl__TypeNameAssignment_2)
	{ after(grammarAccess.getVarsDeclAccess().getTypeNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeChannelsDeclList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelsDeclList__Group__0__Impl
	rule__NeChannelsDeclList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsAssignment_0()); }
	(rule__NeChannelsDeclList__ChannelsDeclsAssignment_0)
	{ after(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelsDeclList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelsDeclListAccess().getGroup_1()); }
	(rule__NeChannelsDeclList__Group_1__0)*
	{ after(grammarAccess.getNeChannelsDeclListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeChannelsDeclList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelsDeclList__Group_1__0__Impl
	rule__NeChannelsDeclList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelsDeclListAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getNeChannelsDeclListAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelsDeclList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsAssignment_1_1()); }
	(rule__NeChannelsDeclList__ChannelsDeclsAssignment_1_1)
	{ after(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelsDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelsDecl__Group__0__Impl
	rule__ChannelsDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelsDeclAccess().getNeChannelNameListAssignment_0()); }
	(rule__ChannelsDecl__NeChannelNameListAssignment_0)
	{ after(grammarAccess.getChannelsDeclAccess().getNeChannelNameListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelsDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelsDeclAccess().getGroup_1()); }
	(rule__ChannelsDecl__Group_1__0)?
	{ after(grammarAccess.getChannelsDeclAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelsDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelsDecl__Group_1__0__Impl
	rule__ChannelsDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelsDeclAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getChannelsDeclAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelsDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelsDeclAccess().getNeTypeNameListAssignment_1_1()); }
	(rule__ChannelsDecl__NeTypeNameListAssignment_1_1)
	{ after(grammarAccess.getChannelsDeclAccess().getNeTypeNameListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeTypeNameList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeTypeNameList__Group__0__Impl
	rule__NeTypeNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeTypeNameListAccess().getTypeNamesAssignment_0()); }
	(rule__NeTypeNameList__TypeNamesAssignment_0)
	{ after(grammarAccess.getNeTypeNameListAccess().getTypeNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeTypeNameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeTypeNameListAccess().getGroup_1()); }
	(rule__NeTypeNameList__Group_1__0)*
	{ after(grammarAccess.getNeTypeNameListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeTypeNameList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeTypeNameList__Group_1__0__Impl
	rule__NeTypeNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeTypeNameListAccess().getNumberSignKeyword_1_0()); }
	'#'
	{ after(grammarAccess.getNeTypeNameListAccess().getNumberSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeTypeNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeTypeNameListAccess().getTypeNamesAssignment_1_1()); }
	(rule__NeTypeNameList__TypeNamesAssignment_1_1)
	{ after(grammarAccess.getNeTypeNameListAccess().getTypeNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeChannelNameList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelNameList__Group__0__Impl
	rule__NeChannelNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelNameListAccess().getChannelNamesAssignment_0()); }
	(rule__NeChannelNameList__ChannelNamesAssignment_0)
	{ after(grammarAccess.getNeChannelNameListAccess().getChannelNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelNameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelNameListAccess().getGroup_1()); }
	(rule__NeChannelNameList__Group_1__0)*
	{ after(grammarAccess.getNeChannelNameListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeChannelNameList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelNameList__Group_1__0__Impl
	rule__NeChannelNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelNameListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNeChannelNameListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeChannelNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeChannelNameListAccess().getChannelNamesAssignment_1_1()); }
	(rule__NeChannelNameList__ChannelNamesAssignment_1_1)
	{ after(grammarAccess.getNeChannelNameListAccess().getChannelNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeIdNameList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeIdNameList__Group__0__Impl
	rule__NeIdNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeIdNameListAccess().getIdNamesAssignment_0()); }
	(rule__NeIdNameList__IdNamesAssignment_0)
	{ after(grammarAccess.getNeIdNameListAccess().getIdNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeIdNameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeIdNameListAccess().getGroup_1()); }
	(rule__NeIdNameList__Group_1__0)*
	{ after(grammarAccess.getNeIdNameListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeIdNameList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeIdNameList__Group_1__0__Impl
	rule__NeIdNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeIdNameListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNeIdNameListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeIdNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeIdNameListAccess().getIdNamesAssignment_1_1()); }
	(rule__NeIdNameList__IdNamesAssignment_1_1)
	{ after(grammarAccess.getNeIdNameListAccess().getIdNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeVarNameList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarNameList__Group__0__Impl
	rule__NeVarNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarNameListAccess().getVarNamesAssignment_0()); }
	(rule__NeVarNameList__VarNamesAssignment_0)
	{ after(grammarAccess.getNeVarNameListAccess().getVarNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarNameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarNameListAccess().getGroup_1()); }
	(rule__NeVarNameList__Group_1__0)*
	{ after(grammarAccess.getNeVarNameListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeVarNameList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarNameList__Group_1__0__Impl
	rule__NeVarNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarNameListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNeVarNameListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeVarNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeVarNameListAccess().getVarNamesAssignment_1_1()); }
	(rule__NeVarNameList__VarNamesAssignment_1_1)
	{ after(grammarAccess.getNeVarNameListAccess().getVarNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group__0__Impl
	rule__ProcessBehaviourLevel1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourLevel2ParserRuleCall_0()); }
	ruleProcessBehaviourLevel2
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourLevel2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getAlternatives_1()); }
	(rule__ProcessBehaviourLevel1__Alternatives_1)*
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_0__0__Impl
	rule__ProcessBehaviourLevel1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourEnableLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourEnableLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_0__1__Impl
	rule__ProcessBehaviourLevel1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_0_1()); }
	'>>>'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_0_2()); }
	(rule__ProcessBehaviourLevel1__RightAssignment_1_0_2)
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel1__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1__0__Impl
	rule__ProcessBehaviourLevel1__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourEnableAcceptLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourEnableAcceptLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1__1__Impl
	rule__ProcessBehaviourLevel1__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_1()); }
	'>>>'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1__2__Impl
	rule__ProcessBehaviourLevel1__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getACCEPTKeyword_1_1_2()); }
	'ACCEPT'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getACCEPTKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1__3__Impl
	rule__ProcessBehaviourLevel1__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getAlternatives_1_1_3()); }
	(rule__ProcessBehaviourLevel1__Alternatives_1_1_3)*
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getAlternatives_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1__4__Impl
	rule__ProcessBehaviourLevel1__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getINKeyword_1_1_4()); }
	'IN'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getINKeyword_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1__5__Impl
	rule__ProcessBehaviourLevel1__Group_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_1_5()); }
	(rule__ProcessBehaviourLevel1__RightAssignment_1_1_5)
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getNIKeyword_1_1_6()); }
	'NI'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getNIKeyword_1_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel1__Group_1_1_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1_3_0__0__Impl
	rule__ProcessBehaviourLevel1__Group_1_1_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getQuestionMarkKeyword_1_1_3_0_0()); }
	'?'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getQuestionMarkKeyword_1_1_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getAlternatives_1_1_3_0_1()); }
	(rule__ProcessBehaviourLevel1__Alternatives_1_1_3_0_1)
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getAlternatives_1_1_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel1__Group_1_1_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1_3_1__0__Impl
	rule__ProcessBehaviourLevel1__Group_1_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getExclamationMarkKeyword_1_1_3_1_0()); }
	'!'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getExclamationMarkKeyword_1_1_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_1_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getValExprsAssignment_1_1_3_1_1()); }
	(rule__ProcessBehaviourLevel1__ValExprsAssignment_1_1_3_1_1)
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getValExprsAssignment_1_1_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel1__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_2__0__Impl
	rule__ProcessBehaviourLevel1__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourDisableLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourDisableLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_2__1__Impl
	rule__ProcessBehaviourLevel1__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getLeftSquareBracketGreaterThanSignGreaterThanSignKeyword_1_2_1()); }
	'[>>'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getLeftSquareBracketGreaterThanSignGreaterThanSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_2_2()); }
	(rule__ProcessBehaviourLevel1__RightAssignment_1_2_2)
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel1__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_3__0__Impl
	rule__ProcessBehaviourLevel1__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourInterruptLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getProcessBehaviourInterruptLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_3__1__Impl
	rule__ProcessBehaviourLevel1__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getLeftSquareBracketGreaterThanSignLessThanSignKeyword_1_3_1()); }
	'[><'
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getLeftSquareBracketGreaterThanSignLessThanSignKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel1__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_3_2()); }
	(rule__ProcessBehaviourLevel1__RightAssignment_1_3_2)
	{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group__0__Impl
	rule__ProcessBehaviourLevel2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourLevel3ParserRuleCall_0()); }
	ruleProcessBehaviourLevel3
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourLevel3ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getAlternatives_1()); }
	(rule__ProcessBehaviourLevel2__Alternatives_1)*
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_0__0__Impl
	rule__ProcessBehaviourLevel2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourSynchronizedLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourSynchronizedLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_0__1__Impl
	rule__ProcessBehaviourLevel2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getVerticalLineVerticalLineKeyword_1_0_1()); }
	'||'
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getVerticalLineVerticalLineKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getRightAssignment_1_0_2()); }
	(rule__ProcessBehaviourLevel2__RightAssignment_1_0_2)
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel2__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_1__0__Impl
	rule__ProcessBehaviourLevel2__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourParallelLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourParallelLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_1__1__Impl
	rule__ProcessBehaviourLevel2__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getVerticalLineVerticalLineVerticalLineKeyword_1_1_1()); }
	'|||'
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getVerticalLineVerticalLineVerticalLineKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getRightAssignment_1_1_2()); }
	(rule__ProcessBehaviourLevel2__RightAssignment_1_1_2)
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel2__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_2__0__Impl
	rule__ProcessBehaviourLevel2__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourSynchronizeChannelsLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getProcessBehaviourSynchronizeChannelsLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_2__1__Impl
	rule__ProcessBehaviourLevel2__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getSynchronizedChannelsAssignment_1_2_1()); }
	(rule__ProcessBehaviourLevel2__SynchronizedChannelsAssignment_1_2_1)
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getSynchronizedChannelsAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel2__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel2Access().getRightAssignment_1_2_2()); }
	(rule__ProcessBehaviourLevel2__RightAssignment_1_2_2)
	{ after(grammarAccess.getProcessBehaviourLevel2Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel3__Group__0__Impl
	rule__ProcessBehaviourLevel3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel3Access().getProcessBehaviourLevel4ParserRuleCall_0()); }
	ruleProcessBehaviourLevel4
	{ after(grammarAccess.getProcessBehaviourLevel3Access().getProcessBehaviourLevel4ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel3Access().getGroup_1()); }
	(rule__ProcessBehaviourLevel3__Group_1__0)*
	{ after(grammarAccess.getProcessBehaviourLevel3Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLevel3__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel3__Group_1__0__Impl
	rule__ProcessBehaviourLevel3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel3Access().getProcessBehaviourChoiceLeftAction_1_0()); }
	()
	{ after(grammarAccess.getProcessBehaviourLevel3Access().getProcessBehaviourChoiceLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel3__Group_1__1__Impl
	rule__ProcessBehaviourLevel3__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel3Access().getNumberSignNumberSignKeyword_1_1()); }
	'##'
	{ after(grammarAccess.getProcessBehaviourLevel3Access().getNumberSignNumberSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLevel3__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLevel3Access().getRightAssignment_1_2()); }
	(rule__ProcessBehaviourLevel3__RightAssignment_1_2)
	{ after(grammarAccess.getProcessBehaviourLevel3Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__0__Impl
	rule__ProcCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getNameAssignment_0()); }
	(rule__ProcCall__NameAssignment_0)
	{ after(grammarAccess.getProcCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__1__Impl
	rule__ProcCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getProcCallAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__2__Impl
	rule__ProcCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getNeChannelNameListAssignment_2()); }
	(rule__ProcCall__NeChannelNameListAssignment_2)?
	{ after(grammarAccess.getProcCallAccess().getNeChannelNameListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__3__Impl
	rule__ProcCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getProcCallAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__4__Impl
	rule__ProcCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__5__Impl
	rule__ProcCall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getNeValExprListAssignment_5()); }
	(rule__ProcCall__NeValExprListAssignment_5)?
	{ after(grammarAccess.getProcCallAccess().getNeValExprListAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcCall__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeValExprList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeValExprList__Group__0__Impl
	rule__NeValExprList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeValExprListAccess().getValExprsAssignment_0()); }
	(rule__NeValExprList__ValExprsAssignment_0)
	{ after(grammarAccess.getNeValExprListAccess().getValExprsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeValExprList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeValExprListAccess().getGroup_1()); }
	(rule__NeValExprList__Group_1__0)*
	{ after(grammarAccess.getNeValExprListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeValExprList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeValExprList__Group_1__0__Impl
	rule__NeValExprList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeValExprListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNeValExprListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeValExprList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeValExprListAccess().getValExprsAssignment_1_1()); }
	(rule__NeValExprList__ValExprsAssignment_1_1)
	{ after(grammarAccess.getNeValExprListAccess().getValExprsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourBracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourBracket__Group__0__Impl
	rule__ProcessBehaviourBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourBracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourBracketAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getProcessBehaviourBracketAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourBracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourBracket__Group__1__Impl
	rule__ProcessBehaviourBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourBracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourBracketAccess().getSubAssignment_1()); }
	(rule__ProcessBehaviourBracket__SubAssignment_1)
	{ after(grammarAccess.getProcessBehaviourBracketAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourBracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourBracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourBracketAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getProcessBehaviourBracketAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourHide__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourHide__Group__0__Impl
	rule__ProcessBehaviourHide__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourHideAccess().getHIDEKeyword_0()); }
	'HIDE'
	{ after(grammarAccess.getProcessBehaviourHideAccess().getHIDEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourHide__Group__1__Impl
	rule__ProcessBehaviourHide__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourHideAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getProcessBehaviourHideAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourHide__Group__2__Impl
	rule__ProcessBehaviourHide__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourHideAccess().getNeChannelsDeclListAssignment_2()); }
	(rule__ProcessBehaviourHide__NeChannelsDeclListAssignment_2)?
	{ after(grammarAccess.getProcessBehaviourHideAccess().getNeChannelsDeclListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourHide__Group__3__Impl
	rule__ProcessBehaviourHide__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourHideAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getProcessBehaviourHideAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourHide__Group__4__Impl
	rule__ProcessBehaviourHide__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourHideAccess().getINKeyword_4()); }
	'IN'
	{ after(grammarAccess.getProcessBehaviourHideAccess().getINKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourHide__Group__5__Impl
	rule__ProcessBehaviourHide__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourHideAccess().getSubAssignment_5()); }
	(rule__ProcessBehaviourHide__SubAssignment_5)
	{ after(grammarAccess.getProcessBehaviourHideAccess().getSubAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourHide__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourHideAccess().getNIKeyword_6()); }
	'NI'
	{ after(grammarAccess.getProcessBehaviourHideAccess().getNIKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group__0__Impl
	rule__ProcessBehaviourLet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getLETKeyword_0()); }
	'LET'
	{ after(grammarAccess.getProcessBehaviourLetAccess().getLETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group__1__Impl
	rule__ProcessBehaviourLet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignment_1()); }
	(rule__ProcessBehaviourLet__AssignmentsAssignment_1)
	{ after(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group__2__Impl
	rule__ProcessBehaviourLet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getGroup_2()); }
	(rule__ProcessBehaviourLet__Group_2__0)*
	{ after(grammarAccess.getProcessBehaviourLetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group__3__Impl
	rule__ProcessBehaviourLet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getINKeyword_3()); }
	'IN'
	{ after(grammarAccess.getProcessBehaviourLetAccess().getINKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group__4__Impl
	rule__ProcessBehaviourLet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getSubAssignment_4()); }
	(rule__ProcessBehaviourLet__SubAssignment_4)
	{ after(grammarAccess.getProcessBehaviourLetAccess().getSubAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getNIKeyword_5()); }
	'NI'
	{ after(grammarAccess.getProcessBehaviourLetAccess().getNIKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourLet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group_2__0__Impl
	rule__ProcessBehaviourLet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getProcessBehaviourLetAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourLet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignment_2_1()); }
	(rule__ProcessBehaviourLet__AssignmentsAssignment_2_1)
	{ after(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourSequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourSequence__Group__0__Impl
	rule__ProcessBehaviourSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourSequenceAccess().getConditionalCommunicationsAssignment_0()); }
	(rule__ProcessBehaviourSequence__ConditionalCommunicationsAssignment_0)
	{ after(grammarAccess.getProcessBehaviourSequenceAccess().getConditionalCommunicationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourSequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourSequenceAccess().getGroup_1()); }
	(rule__ProcessBehaviourSequence__Group_1__0)?
	{ after(grammarAccess.getProcessBehaviourSequenceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourSequence__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourSequence__Group_1__0__Impl
	rule__ProcessBehaviourSequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourSequenceAccess().getGreaterThanSignHyphenMinusGreaterThanSignKeyword_1_0()); }
	'>->'
	{ after(grammarAccess.getProcessBehaviourSequenceAccess().getGreaterThanSignHyphenMinusGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourSequence__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourSequenceAccess().getSubAssignment_1_1()); }
	(rule__ProcessBehaviourSequence__SubAssignment_1_1)
	{ after(grammarAccess.getProcessBehaviourSequenceAccess().getSubAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBehaviourGuarded__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourGuarded__Group__0__Impl
	rule__ProcessBehaviourGuarded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourGuarded__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourGuardedAccess().getConditionAssignment_0()); }
	(rule__ProcessBehaviourGuarded__ConditionAssignment_0)
	{ after(grammarAccess.getProcessBehaviourGuardedAccess().getConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourGuarded__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourGuarded__Group__1__Impl
	rule__ProcessBehaviourGuarded__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourGuarded__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourGuardedAccess().getEqualsSignGreaterThanSignGreaterThanSignKeyword_1()); }
	'=>>'
	{ after(grammarAccess.getProcessBehaviourGuardedAccess().getEqualsSignGreaterThanSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourGuarded__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBehaviourGuarded__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourGuarded__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBehaviourGuardedAccess().getSubAssignment_2()); }
	(rule__ProcessBehaviourGuarded__SubAssignment_2)
	{ after(grammarAccess.getProcessBehaviourGuardedAccess().getSubAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedChannels__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedChannels__Group__0__Impl
	rule__SynchronizedChannels__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedChannels__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedChannelsAccess().getVerticalLineLeftSquareBracketKeyword_0()); }
	'|['
	{ after(grammarAccess.getSynchronizedChannelsAccess().getVerticalLineLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedChannels__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedChannels__Group__1__Impl
	rule__SynchronizedChannels__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedChannels__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedChannelsAccess().getNeChannelNameListAssignment_1()); }
	(rule__SynchronizedChannels__NeChannelNameListAssignment_1)
	{ after(grammarAccess.getSynchronizedChannelsAccess().getNeChannelNameListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedChannels__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedChannels__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedChannels__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedChannelsAccess().getRightSquareBracketVerticalLineKeyword_2()); }
	']|'
	{ after(grammarAccess.getSynchronizedChannelsAccess().getRightSquareBracketVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalCommunications__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalCommunications__Group__0__Impl
	rule__ConditionalCommunications__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalCommunications__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalCommunicationsAccess().getConditionalCommunicationsAction_0()); }
	()
	{ after(grammarAccess.getConditionalCommunicationsAccess().getConditionalCommunicationsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalCommunications__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalCommunications__Group__1__Impl
	rule__ConditionalCommunications__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalCommunications__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalCommunicationsAccess().getCommunicationsAssignment_1()); }
	(rule__ConditionalCommunications__CommunicationsAssignment_1)
	{ after(grammarAccess.getConditionalCommunicationsAccess().getCommunicationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalCommunications__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalCommunications__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalCommunications__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalCommunicationsAccess().getConditionAssignment_2()); }
	(rule__ConditionalCommunications__ConditionAssignment_2)?
	{ after(grammarAccess.getConditionalCommunicationsAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Communications__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communications__Group__0__Impl
	rule__Communications__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationsAccess().getCommunicationsAction_0()); }
	()
	{ after(grammarAccess.getCommunicationsAccess().getCommunicationsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communications__Group__1__Impl
	rule__Communications__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationsAccess().getCommunicationsAssignment_1()); }
	(rule__Communications__CommunicationsAssignment_1)
	{ after(grammarAccess.getCommunicationsAccess().getCommunicationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communications__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationsAccess().getGroup_2()); }
	(rule__Communications__Group_2__0)*
	{ after(grammarAccess.getCommunicationsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Communications__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communications__Group_2__0__Impl
	rule__Communications__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationsAccess().getVerticalLineKeyword_2_0()); }
	'|'
	{ after(grammarAccess.getCommunicationsAccess().getVerticalLineKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communications__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationsAccess().getCommunicationsAssignment_2_1()); }
	(rule__Communications__CommunicationsAssignment_2_1)
	{ after(grammarAccess.getCommunicationsAccess().getCommunicationsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Communication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communication__Group__0__Impl
	rule__Communication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationAccess().getCommunicationAction_0()); }
	()
	{ after(grammarAccess.getCommunicationAccess().getCommunicationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationAccess().getGroup_1()); }
	(rule__Communication__Group_1__0)
	{ after(grammarAccess.getCommunicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Communication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communication__Group_1__0__Impl
	rule__Communication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationAccess().getAlternatives_1_0()); }
	(rule__Communication__Alternatives_1_0)
	{ after(grammarAccess.getCommunicationAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationAccess().getChannelOffersAssignment_1_1()); }
	(rule__Communication__ChannelOffersAssignment_1_1)*
	{ after(grammarAccess.getCommunicationAccess().getChannelOffersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelOffer__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelOffer__Group_0__0__Impl
	rule__ChannelOffer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelOfferAccess().getExclamationMarkKeyword_0_0()); }
	'!'
	{ after(grammarAccess.getChannelOfferAccess().getExclamationMarkKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelOffer__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelOfferAccess().getValExprsAssignment_0_1()); }
	(rule__ChannelOffer__ValExprsAssignment_0_1)
	{ after(grammarAccess.getChannelOfferAccess().getValExprsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelOffer__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelOffer__Group_1__0__Impl
	rule__ChannelOffer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelOfferAccess().getQuestionMarkKeyword_1_0()); }
	'?'
	{ after(grammarAccess.getChannelOfferAccess().getQuestionMarkKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelOffer__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelOfferAccess().getAlternatives_1_1()); }
	(rule__ChannelOffer__Alternatives_1_1)
	{ after(grammarAccess.getChannelOfferAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionAction_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftSquareBracketLeftSquareBracketKeyword_1()); }
	'[['
	{ after(grammarAccess.getConditionAccess().getLeftSquareBracketLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getValExprAssignment_2()); }
	(rule__Condition__ValExprAssignment_2)
	{ after(grammarAccess.getConditionAccess().getValExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }
	']]'
	{ after(grammarAccess.getConditionAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_0()); }
	(rule__Assignment__Alternatives_0)
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValExprAssignment_2()); }
	(rule__Assignment__ValExprAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarNameAssignment_0()); }
	(rule__VarDecl__VarNameAssignment_0)
	{ after(grammarAccess.getVarDeclAccess().getVarNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getVarDeclAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getTypeNameAssignment_2()); }
	(rule__VarDecl__TypeNameAssignment_2)
	{ after(grammarAccess.getVarDeclAccess().getTypeNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExpr1__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0__0__Impl
	rule__ValExpr1__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getValExpr2ParserRuleCall_0_0()); }
	ruleValExpr2
	{ after(grammarAccess.getValExpr1Access().getValExpr2ParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getAlternatives_0_1()); }
	(rule__ValExpr1__Alternatives_0_1)*
	{ after(grammarAccess.getValExpr1Access().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExpr1__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0_1_0__0__Impl
	rule__ValExpr1__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getValExprOperatorLeftAction_0_1_0_0()); }
	()
	{ after(grammarAccess.getValExpr1Access().getValExprOperatorLeftAction_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0_1_0__1__Impl
	rule__ValExpr1__Group_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getOperatorAssignment_0_1_0_1()); }
	(rule__ValExpr1__OperatorAssignment_0_1_0_1)
	{ after(grammarAccess.getValExpr1Access().getOperatorAssignment_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getRightAssignment_0_1_0_2()); }
	(rule__ValExpr1__RightAssignment_0_1_0_2)
	{ after(grammarAccess.getValExpr1Access().getRightAssignment_0_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExpr1__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0_1_1__0__Impl
	rule__ValExpr1__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getValExprTestLeftAction_0_1_1_0()); }
	()
	{ after(grammarAccess.getValExpr1Access().getValExprTestLeftAction_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0_1_1__1__Impl
	rule__ValExpr1__Group_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getColonColonKeyword_0_1_1_1()); }
	'::'
	{ after(grammarAccess.getValExpr1Access().getColonColonKeyword_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExpr1__Group_0_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__Group_0_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExpr1Access().getTypeNameAssignment_0_1_1_2()); }
	(rule__ValExpr1__TypeNameAssignment_0_1_1_2)
	{ after(grammarAccess.getValExpr1Access().getTypeNameAssignment_0_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprUnaryOperator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprUnaryOperator__Group__0__Impl
	rule__ValExprUnaryOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprUnaryOperator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprUnaryOperatorAccess().getOperatorAssignment_0()); }
	(rule__ValExprUnaryOperator__OperatorAssignment_0)
	{ after(grammarAccess.getValExprUnaryOperatorAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprUnaryOperator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprUnaryOperator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprUnaryOperator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprUnaryOperatorAccess().getValExprAssignment_1()); }
	(rule__ValExprUnaryOperator__ValExprAssignment_1)
	{ after(grammarAccess.getValExprUnaryOperatorAccess().getValExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprError__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprError__Group__0__Impl
	rule__ValExprError__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprError__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprErrorAccess().getERRORKeyword_0()); }
	'ERROR'
	{ after(grammarAccess.getValExprErrorAccess().getERRORKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprError__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprError__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprError__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprErrorAccess().getErrorAssignment_1()); }
	(rule__ValExprError__ErrorAssignment_1)
	{ after(grammarAccess.getValExprErrorAccess().getErrorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprIte__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprIte__Group__0__Impl
	rule__ValExprIte__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprIteAccess().getIFKeyword_0()); }
	'IF'
	{ after(grammarAccess.getValExprIteAccess().getIFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprIte__Group__1__Impl
	rule__ValExprIte__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprIteAccess().getConditionValExprAssignment_1()); }
	(rule__ValExprIte__ConditionValExprAssignment_1)
	{ after(grammarAccess.getValExprIteAccess().getConditionValExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprIte__Group__2__Impl
	rule__ValExprIte__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprIteAccess().getTHENKeyword_2()); }
	'THEN'
	{ after(grammarAccess.getValExprIteAccess().getTHENKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprIte__Group__3__Impl
	rule__ValExprIte__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprIteAccess().getThenValExprAssignment_3()); }
	(rule__ValExprIte__ThenValExprAssignment_3)
	{ after(grammarAccess.getValExprIteAccess().getThenValExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprIte__Group__4__Impl
	rule__ValExprIte__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprIteAccess().getELSEKeyword_4()); }
	'ELSE'
	{ after(grammarAccess.getValExprIteAccess().getELSEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprIte__Group__5__Impl
	rule__ValExprIte__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprIteAccess().getElseValExprAssignment_5()); }
	(rule__ValExprIte__ElseValExprAssignment_5)
	{ after(grammarAccess.getValExprIteAccess().getElseValExprAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprIte__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprIteAccess().getFIKeyword_6()); }
	'FI'
	{ after(grammarAccess.getValExprIteAccess().getFIKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprLet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group__0__Impl
	rule__ValExprLet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getLETKeyword_0()); }
	'LET'
	{ after(grammarAccess.getValExprLetAccess().getLETKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group__1__Impl
	rule__ValExprLet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getAssignmentsAssignment_1()); }
	(rule__ValExprLet__AssignmentsAssignment_1)
	{ after(grammarAccess.getValExprLetAccess().getAssignmentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group__2__Impl
	rule__ValExprLet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getGroup_2()); }
	(rule__ValExprLet__Group_2__0)*
	{ after(grammarAccess.getValExprLetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group__3__Impl
	rule__ValExprLet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getINKeyword_3()); }
	'IN'
	{ after(grammarAccess.getValExprLetAccess().getINKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group__4__Impl
	rule__ValExprLet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getValExprAssignment_4()); }
	(rule__ValExprLet__ValExprAssignment_4)
	{ after(grammarAccess.getValExprLetAccess().getValExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getNIKeyword_5()); }
	'NI'
	{ after(grammarAccess.getValExprLetAccess().getNIKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprLet__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group_2__0__Impl
	rule__ValExprLet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getValExprLetAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprLet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprLetAccess().getAssignmentsAssignment_2_1()); }
	(rule__ValExprLet__AssignmentsAssignment_2_1)
	{ after(grammarAccess.getValExprLetAccess().getAssignmentsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprBracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprBracket__Group__0__Impl
	rule__ValExprBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprBracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprBracketAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getValExprBracketAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprBracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprBracket__Group__1__Impl
	rule__ValExprBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprBracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprBracketAccess().getValExprAssignment_1()); }
	(rule__ValExprBracket__ValExprAssignment_1)
	{ after(grammarAccess.getValExprBracketAccess().getValExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprBracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprBracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprBracketAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getValExprBracketAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprRegex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprRegex__Group__0__Impl
	rule__ValExprRegex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprRegexAccess().getREGEXKeyword_0()); }
	'REGEX'
	{ after(grammarAccess.getValExprRegexAccess().getREGEXKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprRegex__Group__1__Impl
	rule__ValExprRegex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprRegexAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getValExprRegexAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprRegex__Group__2__Impl
	rule__ValExprRegex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprRegexAccess().getRegexAssignment_2()); }
	(rule__ValExprRegex__RegexAssignment_2)
	{ after(grammarAccess.getValExprRegexAccess().getRegexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprRegex__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprRegexAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getValExprRegexAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprContructorCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprContructorCall__Group__0__Impl
	rule__ValExprContructorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprContructorCallAccess().getNameAssignment_0()); }
	(rule__ValExprContructorCall__NameAssignment_0)
	{ after(grammarAccess.getValExprContructorCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprContructorCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprContructorCallAccess().getGroup_1()); }
	(rule__ValExprContructorCall__Group_1__0)?
	{ after(grammarAccess.getValExprContructorCallAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprContructorCall__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprContructorCall__Group_1__0__Impl
	rule__ValExprContructorCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprContructorCallAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getValExprContructorCallAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprContructorCall__Group_1__1__Impl
	rule__ValExprContructorCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprContructorCallAccess().getNeValExprListAssignment_1_1()); }
	(rule__ValExprContructorCall__NeValExprListAssignment_1_1)
	{ after(grammarAccess.getValExprContructorCallAccess().getNeValExprListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprContructorCall__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprContructorCallAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getValExprContructorCallAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValExprFunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprFunctionCall__Group__0__Impl
	rule__ValExprFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprFunctionCallAccess().getNameAssignment_0()); }
	(rule__ValExprFunctionCall__NameAssignment_0)
	{ after(grammarAccess.getValExprFunctionCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprFunctionCall__Group__1__Impl
	rule__ValExprFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getValExprFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprFunctionCall__Group__2__Impl
	rule__ValExprFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprFunctionCallAccess().getNeValExprListAssignment_2()); }
	(rule__ValExprFunctionCall__NeValExprListAssignment_2)?
	{ after(grammarAccess.getValExprFunctionCallAccess().getNeValExprListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValExprFunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValExprFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getValExprFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__TypeDefsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTypeDefsTypeDefsParserRuleCall_0_0()); }
		ruleTypeDefs
		{ after(grammarAccess.getModelAccess().getTypeDefsTypeDefsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FuncDefsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFuncDefsFuncDefsParserRuleCall_1_0()); }
		ruleFuncDefs
		{ after(grammarAccess.getModelAccess().getFuncDefsFuncDefsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ConstDefsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConstDefsConstDefsParserRuleCall_2_0()); }
		ruleConstDefs
		{ after(grammarAccess.getModelAccess().getConstDefsConstDefsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProcDefsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProcDefsProcDefsParserRuleCall_3_0()); }
		ruleProcDefs
		{ after(grammarAccess.getModelAccess().getProcDefsProcDefsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StautDefsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStautDefsStautDefsParserRuleCall_4_0()); }
		ruleStautDefs
		{ after(grammarAccess.getModelAccess().getStautDefsStautDefsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ChannelDefsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getChannelDefsChannelDefsParserRuleCall_5_0()); }
		ruleChannelDefs
		{ after(grammarAccess.getModelAccess().getChannelDefsChannelDefsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ModelDefAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getModelDefModelDefParserRuleCall_6_0()); }
		ruleModelDef
		{ after(grammarAccess.getModelAccess().getModelDefModelDefParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MapperDefAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMapperDefMapperDefParserRuleCall_7_0()); }
		ruleMapperDef
		{ after(grammarAccess.getModelAccess().getMapperDefMapperDefParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CnectDefAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCnectDefCnectDefParserRuleCall_8_0()); }
		ruleCnectDef
		{ after(grammarAccess.getModelAccess().getCnectDefCnectDefParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__TypeDefsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefsAccess().getTypeDefsTypeDefParserRuleCall_1_0()); }
		ruleTypeDef
		{ after(grammarAccess.getTypeDefsAccess().getTypeDefsTypeDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefs__TypeDefsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefsAccess().getTypeDefsTypeDefParserRuleCall_2_1_0()); }
		ruleTypeDef
		{ after(grammarAccess.getTypeDefsAccess().getTypeDefsTypeDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getNameTypeNameParserRuleCall_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getTypeDefAccess().getNameTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__NeConstructorListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getNeConstructorListNeConstructorListParserRuleCall_2_0()); }
		ruleNeConstructorList
		{ after(grammarAccess.getTypeDefAccess().getNeConstructorListNeConstructorListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__FuncDefsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefsAccess().getFuncDefsFuncDefParserRuleCall_1_0()); }
		ruleFuncDef
		{ after(grammarAccess.getFuncDefsAccess().getFuncDefsFuncDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefs__FuncDefsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefsAccess().getFuncDefsFuncDefParserRuleCall_2_1_0()); }
		ruleFuncDef
		{ after(grammarAccess.getFuncDefsAccess().getFuncDefsFuncDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__FuncNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefAccess().getFuncNameFuncNameParserRuleCall_0_0()); }
		ruleFuncName
		{ after(grammarAccess.getFuncDefAccess().getFuncNameFuncNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__NeVarsDelarationListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefAccess().getNeVarsDelarationListNeVarsDeclarationListParserRuleCall_2_0()); }
		ruleNeVarsDeclarationList
		{ after(grammarAccess.getFuncDefAccess().getNeVarsDelarationListNeVarsDeclarationListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__TypeNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefAccess().getTypeNameTypeNameParserRuleCall_5_0()); }
		ruleTypeName
		{ after(grammarAccess.getFuncDefAccess().getTypeNameTypeNameParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__ValExprAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefAccess().getValExprValExprParserRuleCall_7_0()); }
		ruleValExpr
		{ after(grammarAccess.getFuncDefAccess().getValExprValExprParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__ConstDefsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDefsAccess().getConstDefsConstDefParserRuleCall_1_0()); }
		ruleConstDef
		{ after(grammarAccess.getConstDefsAccess().getConstDefsConstDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDefs__ConstDefsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDefsAccess().getConstDefsConstDefParserRuleCall_2_1_0()); }
		ruleConstDef
		{ after(grammarAccess.getConstDefsAccess().getConstDefsConstDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDefAccess().getNameConstNameParserRuleCall_0_0()); }
		ruleConstName
		{ after(grammarAccess.getConstDefAccess().getNameConstNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDefAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getConstDefAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDef__ValExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDefAccess().getValExprValExprParserRuleCall_4_0()); }
		ruleValExpr
		{ after(grammarAccess.getConstDefAccess().getValExprValExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__ProcDefsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcDefsAccess().getProcDefsProcDefParserRuleCall_1_0()); }
		ruleProcDef
		{ after(grammarAccess.getProcDefsAccess().getProcDefsProcDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDefs__ProcDefsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcDefsAccess().getProcDefsProcDefParserRuleCall_2_1_0()); }
		ruleProcDef
		{ after(grammarAccess.getProcDefsAccess().getProcDefsProcDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcDefAccess().getNameProcNameParserRuleCall_0_0()); }
		ruleProcName
		{ after(grammarAccess.getProcDefAccess().getNameProcNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__NeChannelDeclListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcDefAccess().getNeChannelDeclListNeChannelsDeclListParserRuleCall_2_0()); }
		ruleNeChannelsDeclList
		{ after(grammarAccess.getProcDefAccess().getNeChannelDeclListNeChannelsDeclListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__NeVarDeclListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcDefAccess().getNeVarDeclListNeVarDeclListParserRuleCall_5_0()); }
		ruleNeVarDeclList
		{ after(grammarAccess.getProcDefAccess().getNeVarDeclListNeVarDeclListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__ExitDeclAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcDefAccess().getExitDeclExitDeclParserRuleCall_7_0()); }
		ruleExitDecl
		{ after(grammarAccess.getProcDefAccess().getExitDeclExitDeclParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcDef__ProcessBehaviourAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcDefAccess().getProcessBehaviourProcessBehaviourParserRuleCall_9_0()); }
		ruleProcessBehaviour
		{ after(grammarAccess.getProcDefAccess().getProcessBehaviourProcessBehaviourParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__StautDefsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautDefsAccess().getStautDefsStautDefParserRuleCall_1_0()); }
		ruleStautDef
		{ after(grammarAccess.getStautDefsAccess().getStautDefsStautDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDefs__StautDefsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautDefsAccess().getStautDefsStautDefParserRuleCall_2_1_0()); }
		ruleStautDef
		{ after(grammarAccess.getStautDefsAccess().getStautDefsStautDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautDefAccess().getNameStautNameParserRuleCall_0_0()); }
		ruleStautName
		{ after(grammarAccess.getStautDefAccess().getNameStautNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__NeChannelDeclListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautDefAccess().getNeChannelDeclListNeChannelsDeclListParserRuleCall_2_0()); }
		ruleNeChannelsDeclList
		{ after(grammarAccess.getStautDefAccess().getNeChannelDeclListNeChannelsDeclListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__NeVarDeclListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautDefAccess().getNeVarDeclListNeVarDeclListParserRuleCall_5_0()); }
		ruleNeVarDeclList
		{ after(grammarAccess.getStautDefAccess().getNeVarDeclListNeVarDeclListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__ExitDeclAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautDefAccess().getExitDeclExitDeclParserRuleCall_7_0()); }
		ruleExitDecl
		{ after(grammarAccess.getStautDefAccess().getExitDeclExitDeclParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautDef__StautItemsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautDefAccess().getStautItemsStautItemsParserRuleCall_9_0()); }
		ruleStautItems
		{ after(grammarAccess.getStautDefAccess().getStautItemsStautItemsParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDefs__ChannelDefsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelDefsAccess().getChannelDefsChannelDefParserRuleCall_1_0()); }
		ruleChannelDef
		{ after(grammarAccess.getChannelDefsAccess().getChannelDefsChannelDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelDefAccess().getNameChannelDefNameParserRuleCall_0_0()); }
		ruleChannelDefName
		{ after(grammarAccess.getChannelDefAccess().getNameChannelDefNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDef__NeChannelDeclListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelDefAccess().getNeChannelDeclListNeChannelsDeclListParserRuleCall_2_0()); }
		ruleNeChannelsDeclList
		{ after(grammarAccess.getChannelDefAccess().getNeChannelDeclListNeChannelsDeclListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__ModelNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelDefAccess().getModelNameModelNameParserRuleCall_1_0()); }
		ruleModelName
		{ after(grammarAccess.getModelDefAccess().getModelNameModelNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__NeInputChannelNameListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelDefAccess().getNeInputChannelNameListNeChannelNameListParserRuleCall_5_0()); }
		ruleNeChannelNameList
		{ after(grammarAccess.getModelDefAccess().getNeInputChannelNameListNeChannelNameListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__NeOutputChannelNameListAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelDefAccess().getNeOutputChannelNameListNeChannelNameListParserRuleCall_8_0()); }
		ruleNeChannelNameList
		{ after(grammarAccess.getModelDefAccess().getNeOutputChannelNameListNeChannelNameListParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDef__ProcessBehaviourAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelDefAccess().getProcessBehaviourProcessBehaviourParserRuleCall_10_0()); }
		ruleProcessBehaviour
		{ after(grammarAccess.getModelDefAccess().getProcessBehaviourProcessBehaviourParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__MapperNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapperDefAccess().getMapperNameMapperNameParserRuleCall_1_0()); }
		ruleMapperName
		{ after(grammarAccess.getMapperDefAccess().getMapperNameMapperNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__ChanInNeChannelsDeclListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapperDefAccess().getChanInNeChannelsDeclListNeChannelsDeclListParserRuleCall_5_0()); }
		ruleNeChannelsDeclList
		{ after(grammarAccess.getMapperDefAccess().getChanInNeChannelsDeclListNeChannelsDeclListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__ChanOutNeChannelsDeclListAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapperDefAccess().getChanOutNeChannelsDeclListNeChannelsDeclListParserRuleCall_8_0()); }
		ruleNeChannelsDeclList
		{ after(grammarAccess.getMapperDefAccess().getChanOutNeChannelsDeclListNeChannelsDeclListParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperDef__ProcessBehaviourAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapperDefAccess().getProcessBehaviourProcessBehaviourParserRuleCall_10_0()); }
		ruleProcessBehaviour
		{ after(grammarAccess.getMapperDefAccess().getProcessBehaviourProcessBehaviourParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__CnectNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCnectDefAccess().getCnectNameCnectNameParserRuleCall_1_0()); }
		ruleCnectName
		{ after(grammarAccess.getCnectDefAccess().getCnectNameCnectNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__CnectTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCnectDefAccess().getCnectTypeAlternatives_3_0()); }
		(rule__CnectDef__CnectTypeAlternatives_3_0)
		{ after(grammarAccess.getCnectDefAccess().getCnectTypeAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectDef__ConnectionItemsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCnectDefAccess().getConnectionItemsConnectionItemParserRuleCall_4_0()); }
		ruleConnectionItem
		{ after(grammarAccess.getCnectDefAccess().getConnectionItemsConnectionItemParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__StateItemsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautItemsAccess().getStateItemsStateItemParserRuleCall_1_0_0()); }
		ruleStateItem
		{ after(grammarAccess.getStautItemsAccess().getStateItemsStateItemParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__VarItemsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautItemsAccess().getVarItemsVarItemParserRuleCall_1_1_0()); }
		ruleVarItem
		{ after(grammarAccess.getStautItemsAccess().getVarItemsVarItemParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__InitItemsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautItemsAccess().getInitItemsInitItemParserRuleCall_1_2_0()); }
		ruleInitItem
		{ after(grammarAccess.getStautItemsAccess().getInitItemsInitItemParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautItems__TransItemsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautItemsAccess().getTransItemsTransItemParserRuleCall_1_3_0()); }
		ruleTransItem
		{ after(grammarAccess.getStautItemsAccess().getTransItemsTransItemParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateItem__ListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateItemAccess().getListNeIdNameListParserRuleCall_1_0()); }
		ruleNeIdNameList
		{ after(grammarAccess.getStateItemAccess().getListNeIdNameListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarItem__NeVarsDelarationListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarItemAccess().getNeVarsDelarationListNeVarsDeclarationListParserRuleCall_2_0()); }
		ruleNeVarsDeclarationList
		{ after(grammarAccess.getVarItemAccess().getNeVarsDelarationListNeVarsDeclarationListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitItem__IdNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitItemAccess().getIdNameIdNameParserRuleCall_1_0()); }
		ruleIdName
		{ after(grammarAccess.getInitItemAccess().getIdNameIdNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitItem__UpdateListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitItemAccess().getUpdateListUpdateListParserRuleCall_2_0()); }
		ruleUpdateList
		{ after(grammarAccess.getInitItemAccess().getUpdateListUpdateListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__TransitionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransItemAccess().getTransitionsTransitionParserRuleCall_1_0()); }
		ruleTransition
		{ after(grammarAccess.getTransItemAccess().getTransitionsTransitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransItem__TransitionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransItemAccess().getTransitionsTransitionParserRuleCall_2_1_0()); }
		ruleTransition
		{ after(grammarAccess.getTransItemAccess().getTransitionsTransitionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__FromNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getFromNameIdNameParserRuleCall_0_0()); }
		ruleIdName
		{ after(grammarAccess.getTransitionAccess().getFromNameIdNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ConditionalCommunicationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getConditionalCommunicationsConditionalCommunicationsParserRuleCall_2_0()); }
		ruleConditionalCommunications
		{ after(grammarAccess.getTransitionAccess().getConditionalCommunicationsConditionalCommunicationsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__UpdateListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getUpdateListUpdateListParserRuleCall_3_0()); }
		ruleUpdateList
		{ after(grammarAccess.getTransitionAccess().getUpdateListUpdateListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ToNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getToNameIdNameParserRuleCall_5_0()); }
		ruleIdName
		{ after(grammarAccess.getTransitionAccess().getToNameIdNameParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__UpdatesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateListAccess().getUpdatesUpdateParserRuleCall_1_0()); }
		ruleUpdate
		{ after(grammarAccess.getUpdateListAccess().getUpdatesUpdateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateList__UpdatesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateListAccess().getUpdatesUpdateParserRuleCall_2_1_0()); }
		ruleUpdate
		{ after(grammarAccess.getUpdateListAccess().getUpdatesUpdateParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__VarNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getVarNameVarNameParserRuleCall_0_0()); }
		ruleVarName
		{ after(grammarAccess.getUpdateAccess().getVarNameVarNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ValExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getValExprValExprParserRuleCall_2_0()); }
		ruleValExpr
		{ after(grammarAccess.getUpdateAccess().getValExprValExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapperName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapperNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getMapperNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__ConstructorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeConstructorListAccess().getConstructorsConstructorParserRuleCall_0_0()); }
		ruleConstructor
		{ after(grammarAccess.getNeConstructorListAccess().getConstructorsConstructorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeConstructorList__ConstructorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeConstructorListAccess().getConstructorConstructorParserRuleCall_1_1_0()); }
		ruleConstructor
		{ after(grammarAccess.getNeConstructorListAccess().getConstructorConstructorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getNameConstructorNameParserRuleCall_0_0()); }
		ruleConstructorName
		{ after(grammarAccess.getConstructorAccess().getNameConstructorNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__NeFieldsListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getNeFieldsListNeFieldListParserRuleCall_1_1_0()); }
		ruleNeFieldList
		{ after(grammarAccess.getConstructorAccess().getNeFieldsListNeFieldListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__FieldsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeFieldListAccess().getFieldsFieldsParserRuleCall_0_0()); }
		ruleFields
		{ after(grammarAccess.getNeFieldListAccess().getFieldsFieldsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldList__FieldsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeFieldListAccess().getFieldsFieldsParserRuleCall_1_1_0()); }
		ruleFields
		{ after(grammarAccess.getNeFieldListAccess().getFieldsFieldsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__NeFieldNameListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldsAccess().getNeFieldNameListNeFieldNameListParserRuleCall_0_0()); }
		ruleNeFieldNameList
		{ after(grammarAccess.getFieldsAccess().getNeFieldNameListNeFieldNameListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldsAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getFieldsAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__FieldNamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeFieldNameListAccess().getFieldNamesFieldNameParserRuleCall_0_0()); }
		ruleFieldName
		{ after(grammarAccess.getNeFieldNameListAccess().getFieldNamesFieldNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeFieldNameList__FieldNamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeFieldNameListAccess().getFieldNamesFieldNameParserRuleCall_1_1_0()); }
		ruleFieldName
		{ after(grammarAccess.getNeFieldNameListAccess().getFieldNamesFieldNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
		RULE_SMALLID
		{ after(grammarAccess.getFieldNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__ExitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExitDeclAccess().getExitEXITKeyword_0_0()); }
		(
			{ before(grammarAccess.getExitDeclAccess().getExitEXITKeyword_0_0()); }
			'EXIT'
			{ after(grammarAccess.getExitDeclAccess().getExitEXITKeyword_0_0()); }
		)
		{ after(grammarAccess.getExitDeclAccess().getExitEXITKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitDecl__NeTypeNameListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExitDeclAccess().getNeTypeNameListNeTypeNameListParserRuleCall_1_1_0()); }
		ruleNeTypeNameList
		{ after(grammarAccess.getExitDeclAccess().getNeTypeNameListNeTypeNameListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getModelNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__ChannelsDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionOutAccess().getChannelsDeclChannelsDeclParserRuleCall_2_0()); }
		ruleChannelsDecl
		{ after(grammarAccess.getConnectionOutAccess().getChannelsDeclChannelsDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__HostNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionOutAccess().getHostNameHostNameParserRuleCall_4_0()); }
		ruleHostName
		{ after(grammarAccess.getConnectionOutAccess().getHostNameHostNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionOut__PortNumberAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionOutAccess().getPortNumberPortNumberParserRuleCall_6_0()); }
		rulePortNumber
		{ after(grammarAccess.getConnectionOutAccess().getPortNumberPortNumberParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__ChannelsDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionInAccess().getChannelsDeclChannelsDeclParserRuleCall_2_0()); }
		ruleChannelsDecl
		{ after(grammarAccess.getConnectionInAccess().getChannelsDeclChannelsDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__HostNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionInAccess().getHostNameHostNameParserRuleCall_4_0()); }
		ruleHostName
		{ after(grammarAccess.getConnectionInAccess().getHostNameHostNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionIn__PortNumberAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionInAccess().getPortNumberPortNumberParserRuleCall_6_0()); }
		rulePortNumber
		{ after(grammarAccess.getConnectionInAccess().getPortNumberPortNumberParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__CommunicationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEncodingAccess().getCommunicationCommunicationParserRuleCall_1_0()); }
		ruleCommunication
		{ after(grammarAccess.getEncodingAccess().getCommunicationCommunicationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Encoding__ChannelOfferAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEncodingAccess().getChannelOfferChannelOfferParserRuleCall_3_0()); }
		ruleChannelOffer
		{ after(grammarAccess.getEncodingAccess().getChannelOfferChannelOfferParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__CommunicationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecodingAccess().getCommunicationCommunicationParserRuleCall_1_0()); }
		ruleCommunication
		{ after(grammarAccess.getDecodingAccess().getCommunicationCommunicationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decoding__ChannelOfferAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecodingAccess().getChannelOfferChannelOfferParserRuleCall_3_0()); }
		ruleChannelOffer
		{ after(grammarAccess.getDecodingAccess().getChannelOfferChannelOfferParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortNumber__PortNumberAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortNumberAccess().getPortNumberINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getPortNumberAccess().getPortNumberINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HostName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHostNameAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getHostNameAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StautName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStautNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getStautNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDefName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelDefNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getChannelDefNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
		RULE_SMALLID
		{ after(grammarAccess.getProcNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CnectName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCnectNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getCnectNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__VarsDeclarationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsVarsDeclarationParserRuleCall_0_0()); }
		ruleVarsDeclaration
		{ after(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsVarsDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarsDeclarationList__VarsDeclarationsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsVarsDeclarationParserRuleCall_1_1_0()); }
		ruleVarsDeclaration
		{ after(grammarAccess.getNeVarsDeclarationListAccess().getVarsDeclarationsVarsDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDeclaration__NeVarNameListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsDeclarationAccess().getNeVarNameListNeVarNameListParserRuleCall_0_0()); }
		ruleNeVarNameList
		{ after(grammarAccess.getVarsDeclarationAccess().getNeVarNameListNeVarNameListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDeclaration__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsDeclarationAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getVarsDeclarationAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__VarsDeclsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeVarDeclListAccess().getVarsDeclsVarsDeclParserRuleCall_0_0()); }
		ruleVarsDecl
		{ after(grammarAccess.getNeVarDeclListAccess().getVarsDeclsVarsDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarDeclList__VarsDeclsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeVarDeclListAccess().getVarsDeclsVarsDeclParserRuleCall_1_1_0()); }
		ruleVarsDecl
		{ after(grammarAccess.getNeVarDeclListAccess().getVarsDeclsVarsDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDecl__NeVarNameListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsDeclAccess().getNeVarNameListNeVarNameListParserRuleCall_0_0()); }
		ruleNeVarNameList
		{ after(grammarAccess.getVarsDeclAccess().getNeVarNameListNeVarNameListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarsDecl__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsDeclAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getVarsDeclAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__ChannelsDeclsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsChannelsDeclParserRuleCall_0_0()); }
		ruleChannelsDecl
		{ after(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsChannelsDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelsDeclList__ChannelsDeclsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsChannelsDeclParserRuleCall_1_1_0()); }
		ruleChannelsDecl
		{ after(grammarAccess.getNeChannelsDeclListAccess().getChannelsDeclsChannelsDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__NeChannelNameListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelsDeclAccess().getNeChannelNameListNeChannelNameListParserRuleCall_0_0()); }
		ruleNeChannelNameList
		{ after(grammarAccess.getChannelsDeclAccess().getNeChannelNameListNeChannelNameListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelsDecl__NeTypeNameListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelsDeclAccess().getNeTypeNameListNeTypeNameListParserRuleCall_1_1_0()); }
		ruleNeTypeNameList
		{ after(grammarAccess.getChannelsDeclAccess().getNeTypeNameListNeTypeNameListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__TypeNamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeTypeNameListAccess().getTypeNamesTypeNameParserRuleCall_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getNeTypeNameListAccess().getTypeNamesTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeTypeNameList__TypeNamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeTypeNameListAccess().getTypeNamesTypeNameParserRuleCall_1_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getNeTypeNameListAccess().getTypeNamesTypeNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getTypeNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__ChannelNamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeChannelNameListAccess().getChannelNamesChannelNameParserRuleCall_0_0()); }
		ruleChannelName
		{ after(grammarAccess.getNeChannelNameListAccess().getChannelNamesChannelNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeChannelNameList__ChannelNamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeChannelNameListAccess().getChannelNamesChannelNameParserRuleCall_1_1_0()); }
		ruleChannelName
		{ after(grammarAccess.getNeChannelNameListAccess().getChannelNamesChannelNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__IdNamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeIdNameListAccess().getIdNamesIdNameParserRuleCall_0_0()); }
		ruleIdName
		{ after(grammarAccess.getNeIdNameListAccess().getIdNamesIdNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeIdNameList__IdNamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeIdNameListAccess().getIdNamesIdNameParserRuleCall_1_1_0()); }
		ruleIdName
		{ after(grammarAccess.getNeIdNameListAccess().getIdNamesIdNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdName__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdNameAccess().getNameSMALLIDTerminalRuleCall_0_0()); }
		RULE_SMALLID
		{ after(grammarAccess.getIdNameAccess().getNameSMALLIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdName__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdNameAccess().getNameCAPSIDTerminalRuleCall_1_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getIdNameAccess().getNameCAPSIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getChannelNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__VarNamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeVarNameListAccess().getVarNamesVarNameParserRuleCall_0_0()); }
		ruleVarName
		{ after(grammarAccess.getNeVarNameListAccess().getVarNamesVarNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeVarNameList__VarNamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeVarNameListAccess().getVarNamesVarNameParserRuleCall_1_1_0()); }
		ruleVarName
		{ after(grammarAccess.getNeVarNameListAccess().getVarNamesVarNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
		RULE_SMALLID
		{ after(grammarAccess.getVarNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_0_2_0()); }
		ruleProcessBehaviourLevel2
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__VarDeclsAssignment_1_1_3_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getVarDeclsVarDeclParserRuleCall_1_1_3_0_1_0_0()); }
		ruleVarDecl
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getVarDeclsVarDeclParserRuleCall_1_1_3_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__VarNamesAssignment_1_1_3_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getVarNamesVarNameParserRuleCall_1_1_3_0_1_1_0()); }
		ruleVarName
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getVarNamesVarNameParserRuleCall_1_1_3_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__ValExprsAssignment_1_1_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getValExprsValExprParserRuleCall_1_1_3_1_1_0()); }
		ruleValExpr
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getValExprsValExprParserRuleCall_1_1_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__RightAssignment_1_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_1_5_0()); }
		ruleProcessBehaviourLevel2
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_2_2_0()); }
		ruleProcessBehaviourLevel2
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel1__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_3_2_0()); }
		ruleProcessBehaviourLevel2
		{ after(grammarAccess.getProcessBehaviourLevel1Access().getRightProcessBehaviourLevel2ParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getRightProcessBehaviourLevel3ParserRuleCall_1_0_2_0()); }
		ruleProcessBehaviourLevel3
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getRightProcessBehaviourLevel3ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getRightProcessBehaviourLevel3ParserRuleCall_1_1_2_0()); }
		ruleProcessBehaviourLevel3
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getRightProcessBehaviourLevel3ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__SynchronizedChannelsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getSynchronizedChannelsSynchronizedChannelsParserRuleCall_1_2_1_0()); }
		ruleSynchronizedChannels
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getSynchronizedChannelsSynchronizedChannelsParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel2__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel2Access().getRightProcessBehaviourLevel3ParserRuleCall_1_2_2_0()); }
		ruleProcessBehaviourLevel3
		{ after(grammarAccess.getProcessBehaviourLevel2Access().getRightProcessBehaviourLevel3ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLevel3__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLevel3Access().getRightProcessBehaviourLevel4ParserRuleCall_1_2_0()); }
		ruleProcessBehaviourLevel4
		{ after(grammarAccess.getProcessBehaviourLevel3Access().getRightProcessBehaviourLevel4ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcCallAccess().getNameProcNameParserRuleCall_0_0()); }
		ruleProcName
		{ after(grammarAccess.getProcCallAccess().getNameProcNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__NeChannelNameListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcCallAccess().getNeChannelNameListNeChannelNameListParserRuleCall_2_0()); }
		ruleNeChannelNameList
		{ after(grammarAccess.getProcCallAccess().getNeChannelNameListNeChannelNameListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__NeValExprListAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcCallAccess().getNeValExprListNeValExprListParserRuleCall_5_0()); }
		ruleNeValExprList
		{ after(grammarAccess.getProcCallAccess().getNeValExprListNeValExprListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__ValExprsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeValExprListAccess().getValExprsValExprParserRuleCall_0_0()); }
		ruleValExpr
		{ after(grammarAccess.getNeValExprListAccess().getValExprsValExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeValExprList__ValExprsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeValExprListAccess().getValExprsValExprParserRuleCall_1_1_0()); }
		ruleValExpr
		{ after(grammarAccess.getNeValExprListAccess().getValExprsValExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourBracket__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourBracketAccess().getSubProcessBehaviourLevel1ParserRuleCall_1_0()); }
		ruleProcessBehaviourLevel1
		{ after(grammarAccess.getProcessBehaviourBracketAccess().getSubProcessBehaviourLevel1ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__NeChannelsDeclListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourHideAccess().getNeChannelsDeclListNeChannelsDeclListParserRuleCall_2_0()); }
		ruleNeChannelsDeclList
		{ after(grammarAccess.getProcessBehaviourHideAccess().getNeChannelsDeclListNeChannelsDeclListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourHide__SubAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourHideAccess().getSubProcessBehaviourLevel1ParserRuleCall_5_0()); }
		ruleProcessBehaviourLevel1
		{ after(grammarAccess.getProcessBehaviourHideAccess().getSubProcessBehaviourLevel1ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__AssignmentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignmentParserRuleCall_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__AssignmentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignmentParserRuleCall_2_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getProcessBehaviourLetAccess().getAssignmentsAssignmentParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourLet__SubAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourLetAccess().getSubProcessBehaviourLevel1ParserRuleCall_4_0()); }
		ruleProcessBehaviourLevel1
		{ after(grammarAccess.getProcessBehaviourLetAccess().getSubProcessBehaviourLevel1ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__ConditionalCommunicationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourSequenceAccess().getConditionalCommunicationsConditionalCommunicationsParserRuleCall_0_0()); }
		ruleConditionalCommunications
		{ after(grammarAccess.getProcessBehaviourSequenceAccess().getConditionalCommunicationsConditionalCommunicationsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourSequence__SubAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourSequenceAccess().getSubProcessBehaviourLevel4ParserRuleCall_1_1_0()); }
		ruleProcessBehaviourLevel4
		{ after(grammarAccess.getProcessBehaviourSequenceAccess().getSubProcessBehaviourLevel4ParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourGuarded__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourGuardedAccess().getConditionConditionParserRuleCall_0_0()); }
		ruleCondition
		{ after(grammarAccess.getProcessBehaviourGuardedAccess().getConditionConditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourGuarded__SubAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourGuardedAccess().getSubProcessBehaviourLevel4ParserRuleCall_2_0()); }
		ruleProcessBehaviourLevel4
		{ after(grammarAccess.getProcessBehaviourGuardedAccess().getSubProcessBehaviourLevel4ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBehaviourStop__StopAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBehaviourStopAccess().getStopSTOPKeyword_0()); }
		(
			{ before(grammarAccess.getProcessBehaviourStopAccess().getStopSTOPKeyword_0()); }
			'STOP'
			{ after(grammarAccess.getProcessBehaviourStopAccess().getStopSTOPKeyword_0()); }
		)
		{ after(grammarAccess.getProcessBehaviourStopAccess().getStopSTOPKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedChannels__NeChannelNameListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSynchronizedChannelsAccess().getNeChannelNameListNeChannelNameListParserRuleCall_1_0()); }
		ruleNeChannelNameList
		{ after(grammarAccess.getSynchronizedChannelsAccess().getNeChannelNameListNeChannelNameListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalCommunications__CommunicationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalCommunicationsAccess().getCommunicationsCommunicationsParserRuleCall_1_0()); }
		ruleCommunications
		{ after(grammarAccess.getConditionalCommunicationsAccess().getCommunicationsCommunicationsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalCommunications__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalCommunicationsAccess().getConditionConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionalCommunicationsAccess().getConditionConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__CommunicationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationsAccess().getCommunicationsCommunicationParserRuleCall_1_0()); }
		ruleCommunication
		{ after(grammarAccess.getCommunicationsAccess().getCommunicationsCommunicationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communications__CommunicationsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationsAccess().getCommunicationsCommunicationParserRuleCall_2_1_0()); }
		ruleCommunication
		{ after(grammarAccess.getCommunicationsAccess().getCommunicationsCommunicationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__ChannelNameAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationAccess().getChannelNameChannelNameParserRuleCall_1_0_0_0()); }
		ruleChannelName
		{ after(grammarAccess.getCommunicationAccess().getChannelNameChannelNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__ExitAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationAccess().getExitEXITKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getCommunicationAccess().getExitEXITKeyword_1_0_1_0()); }
			'EXIT'
			{ after(grammarAccess.getCommunicationAccess().getExitEXITKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getCommunicationAccess().getExitEXITKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__ChannelOffersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationAccess().getChannelOffersChannelOfferParserRuleCall_1_1_0()); }
		ruleChannelOffer
		{ after(grammarAccess.getCommunicationAccess().getChannelOffersChannelOfferParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__ValExprsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelOfferAccess().getValExprsValExprParserRuleCall_0_1_0()); }
		ruleValExpr
		{ after(grammarAccess.getChannelOfferAccess().getValExprsValExprParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__VarDeclsAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelOfferAccess().getVarDeclsVarDeclParserRuleCall_1_1_0_0()); }
		ruleVarDecl
		{ after(grammarAccess.getChannelOfferAccess().getVarDeclsVarDeclParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelOffer__VarNamesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelOfferAccess().getVarNamesVarNameParserRuleCall_1_1_1_0()); }
		ruleVarName
		{ after(grammarAccess.getChannelOfferAccess().getVarNamesVarNameParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ValExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getValExprValExprParserRuleCall_2_0()); }
		ruleValExpr
		{ after(grammarAccess.getConditionAccess().getValExprValExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VarDeclAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarDeclVarDeclParserRuleCall_0_0_0()); }
		ruleVarDecl
		{ after(grammarAccess.getAssignmentAccess().getVarDeclVarDeclParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VarNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarNameVarNameParserRuleCall_0_1_0()); }
		ruleVarName
		{ after(grammarAccess.getAssignmentAccess().getVarNameVarNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValExprValExprParserRuleCall_2_0()); }
		ruleValExpr
		{ after(grammarAccess.getAssignmentAccess().getValExprValExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarNameVarNameParserRuleCall_0_0()); }
		ruleVarName
		{ after(grammarAccess.getVarDeclAccess().getVarNameVarNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getVarDeclAccess().getTypeNameTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__OperatorAssignment_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExpr1Access().getOperatorOPERATORTerminalRuleCall_0_1_0_1_0()); }
		RULE_OPERATOR
		{ after(grammarAccess.getValExpr1Access().getOperatorOPERATORTerminalRuleCall_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__RightAssignment_0_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExpr1Access().getRightValExpr2ParserRuleCall_0_1_0_2_0()); }
		ruleValExpr2
		{ after(grammarAccess.getValExpr1Access().getRightValExpr2ParserRuleCall_0_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr1__TypeNameAssignment_0_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExpr1Access().getTypeNameTypeNameParserRuleCall_0_1_1_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getValExpr1Access().getTypeNameTypeNameParserRuleCall_0_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprUnaryOperator__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprUnaryOperatorAccess().getOperatorOPERATORTerminalRuleCall_0_0()); }
		RULE_OPERATOR
		{ after(grammarAccess.getValExprUnaryOperatorAccess().getOperatorOPERATORTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprUnaryOperator__ValExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprUnaryOperatorAccess().getValExprValExpr2ParserRuleCall_1_0()); }
		ruleValExpr2
		{ after(grammarAccess.getValExprUnaryOperatorAccess().getValExprValExpr2ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmallIdName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmallIdNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
		RULE_SMALLID
		{ after(grammarAccess.getSmallIdNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprError__ErrorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprErrorAccess().getErrorSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValExprErrorAccess().getErrorSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__ConditionValExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprIteAccess().getConditionValExprValExpr1ParserRuleCall_1_0()); }
		ruleValExpr1
		{ after(grammarAccess.getValExprIteAccess().getConditionValExprValExpr1ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__ThenValExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprIteAccess().getThenValExprValExpr1ParserRuleCall_3_0()); }
		ruleValExpr1
		{ after(grammarAccess.getValExprIteAccess().getThenValExprValExpr1ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprIte__ElseValExprAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprIteAccess().getElseValExprValExpr1ParserRuleCall_5_0()); }
		ruleValExpr1
		{ after(grammarAccess.getValExprIteAccess().getElseValExprValExpr1ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__AssignmentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprLetAccess().getAssignmentsAssignmentParserRuleCall_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getValExprLetAccess().getAssignmentsAssignmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__AssignmentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprLetAccess().getAssignmentsAssignmentParserRuleCall_2_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getValExprLetAccess().getAssignmentsAssignmentParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprLet__ValExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprLetAccess().getValExprValExpr1ParserRuleCall_4_0()); }
		ruleValExpr1
		{ after(grammarAccess.getValExprLetAccess().getValExprValExpr1ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprBracket__ValExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprBracketAccess().getValExprValExprParserRuleCall_1_0()); }
		ruleValExpr
		{ after(grammarAccess.getValExprBracketAccess().getValExprValExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprRegex__RegexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprRegexAccess().getRegexSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getValExprRegexAccess().getRegexSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprString__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprStringAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getValExprStringAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprInteger__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprIntegerAccess().getNameBIG_INTParserRuleCall_0()); }
		ruleBIG_INT
		{ after(grammarAccess.getValExprIntegerAccess().getNameBIG_INTParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprContructorCallAccess().getNameConstructorNameParserRuleCall_0_0()); }
		ruleConstructorName
		{ after(grammarAccess.getValExprContructorCallAccess().getNameConstructorNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprContructorCall__NeValExprListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprContructorCallAccess().getNeValExprListNeValExprListParserRuleCall_1_1_0()); }
		ruleNeValExprList
		{ after(grammarAccess.getValExprContructorCallAccess().getNeValExprListNeValExprListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprFunctionCallAccess().getNameFuncNameParserRuleCall_0_0()); }
		ruleFuncName
		{ after(grammarAccess.getValExprFunctionCallAccess().getNameFuncNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValExprFunctionCall__NeValExprListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValExprFunctionCallAccess().getNeValExprListNeValExprListParserRuleCall_2_0()); }
		ruleNeValExprList
		{ after(grammarAccess.getValExprFunctionCallAccess().getNeValExprListNeValExprListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
		RULE_CAPSID
		{ after(grammarAccess.getConstructorNameAccess().getNameCAPSIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
		RULE_SMALLID
		{ after(grammarAccess.getFuncNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
		RULE_SMALLID
		{ after(grammarAccess.getConstNameAccess().getNameSMALLIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OPERATOR : ('='|'+'|'-'|'*'|'^'|'/'|'\\'|'<'|'>'|'@'|'|'|'&'|'%')+;

RULE_CAPSID : 'A'..'Z' ('A'..'Z'|'a'..'z'|'0'..'9'|'_')*;

RULE_SMALLID : 'a'..'z' ('A'..'Z'|'a'..'z'|'0'..'9'|'_')*;

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ML_COMMENT : '{-' ( options {greedy=false;} : . )*'-}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
