/**
 * generated by Xtext 2.10.0
 */
package nl.tno.torxakis.language.torXakisDsl.impl;

import nl.tno.torxakis.language.torXakisDsl.TorXakisDslPackage;
import nl.tno.torxakis.language.torXakisDsl.ValExpr;
import nl.tno.torxakis.language.torXakisDsl.ValExprIte;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Val Expr Ite</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ValExprIteImpl#getConditionValExpr <em>Condition Val Expr</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ValExprIteImpl#getThenValExpr <em>Then Val Expr</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ValExprIteImpl#getElseValExpr <em>Else Val Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ValExprIteImpl extends ValExprImpl implements ValExprIte
{
  /**
   * The cached value of the '{@link #getConditionValExpr() <em>Condition Val Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditionValExpr()
   * @generated
   * @ordered
   */
  protected ValExpr conditionValExpr;

  /**
   * The cached value of the '{@link #getThenValExpr() <em>Then Val Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThenValExpr()
   * @generated
   * @ordered
   */
  protected ValExpr thenValExpr;

  /**
   * The cached value of the '{@link #getElseValExpr() <em>Else Val Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseValExpr()
   * @generated
   * @ordered
   */
  protected ValExpr elseValExpr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ValExprIteImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TorXakisDslPackage.Literals.VAL_EXPR_ITE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValExpr getConditionValExpr()
  {
    return conditionValExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConditionValExpr(ValExpr newConditionValExpr, NotificationChain msgs)
  {
    ValExpr oldConditionValExpr = conditionValExpr;
    conditionValExpr = newConditionValExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR, oldConditionValExpr, newConditionValExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConditionValExpr(ValExpr newConditionValExpr)
  {
    if (newConditionValExpr != conditionValExpr)
    {
      NotificationChain msgs = null;
      if (conditionValExpr != null)
        msgs = ((InternalEObject)conditionValExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR, null, msgs);
      if (newConditionValExpr != null)
        msgs = ((InternalEObject)newConditionValExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR, null, msgs);
      msgs = basicSetConditionValExpr(newConditionValExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR, newConditionValExpr, newConditionValExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValExpr getThenValExpr()
  {
    return thenValExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThenValExpr(ValExpr newThenValExpr, NotificationChain msgs)
  {
    ValExpr oldThenValExpr = thenValExpr;
    thenValExpr = newThenValExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR, oldThenValExpr, newThenValExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setThenValExpr(ValExpr newThenValExpr)
  {
    if (newThenValExpr != thenValExpr)
    {
      NotificationChain msgs = null;
      if (thenValExpr != null)
        msgs = ((InternalEObject)thenValExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR, null, msgs);
      if (newThenValExpr != null)
        msgs = ((InternalEObject)newThenValExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR, null, msgs);
      msgs = basicSetThenValExpr(newThenValExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR, newThenValExpr, newThenValExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValExpr getElseValExpr()
  {
    return elseValExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseValExpr(ValExpr newElseValExpr, NotificationChain msgs)
  {
    ValExpr oldElseValExpr = elseValExpr;
    elseValExpr = newElseValExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR, oldElseValExpr, newElseValExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElseValExpr(ValExpr newElseValExpr)
  {
    if (newElseValExpr != elseValExpr)
    {
      NotificationChain msgs = null;
      if (elseValExpr != null)
        msgs = ((InternalEObject)elseValExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR, null, msgs);
      if (newElseValExpr != null)
        msgs = ((InternalEObject)newElseValExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR, null, msgs);
      msgs = basicSetElseValExpr(newElseValExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR, newElseValExpr, newElseValExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR:
        return basicSetConditionValExpr(null, msgs);
      case TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR:
        return basicSetThenValExpr(null, msgs);
      case TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR:
        return basicSetElseValExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR:
        return getConditionValExpr();
      case TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR:
        return getThenValExpr();
      case TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR:
        return getElseValExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR:
        setConditionValExpr((ValExpr)newValue);
        return;
      case TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR:
        setThenValExpr((ValExpr)newValue);
        return;
      case TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR:
        setElseValExpr((ValExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR:
        setConditionValExpr((ValExpr)null);
        return;
      case TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR:
        setThenValExpr((ValExpr)null);
        return;
      case TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR:
        setElseValExpr((ValExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_ITE__CONDITION_VAL_EXPR:
        return conditionValExpr != null;
      case TorXakisDslPackage.VAL_EXPR_ITE__THEN_VAL_EXPR:
        return thenValExpr != null;
      case TorXakisDslPackage.VAL_EXPR_ITE__ELSE_VAL_EXPR:
        return elseValExpr != null;
    }
    return super.eIsSet(featureID);
  }

} //ValExprIteImpl
