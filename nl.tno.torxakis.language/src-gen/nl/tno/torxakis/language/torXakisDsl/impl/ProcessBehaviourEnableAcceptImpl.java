/**
 * generated by Xtext 2.10.0
 */
package nl.tno.torxakis.language.torXakisDsl.impl;

import java.util.Collection;

import nl.tno.torxakis.language.torXakisDsl.ProcessBehaviour;
import nl.tno.torxakis.language.torXakisDsl.ProcessBehaviourEnableAccept;
import nl.tno.torxakis.language.torXakisDsl.TorXakisDslPackage;
import nl.tno.torxakis.language.torXakisDsl.ValExpr;
import nl.tno.torxakis.language.torXakisDsl.VarDecl;
import nl.tno.torxakis.language.torXakisDsl.VarName;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Process Behaviour Enable Accept</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ProcessBehaviourEnableAcceptImpl#getLeft <em>Left</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ProcessBehaviourEnableAcceptImpl#getVarDecls <em>Var Decls</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ProcessBehaviourEnableAcceptImpl#getVarNames <em>Var Names</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ProcessBehaviourEnableAcceptImpl#getValExprs <em>Val Exprs</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ProcessBehaviourEnableAcceptImpl#getRight <em>Right</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProcessBehaviourEnableAcceptImpl extends ProcessBehaviourImpl implements ProcessBehaviourEnableAccept
{
  /**
   * The cached value of the '{@link #getLeft() <em>Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeft()
   * @generated
   * @ordered
   */
  protected ProcessBehaviour left;

  /**
   * The cached value of the '{@link #getVarDecls() <em>Var Decls</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarDecls()
   * @generated
   * @ordered
   */
  protected EList<VarDecl> varDecls;

  /**
   * The cached value of the '{@link #getVarNames() <em>Var Names</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarNames()
   * @generated
   * @ordered
   */
  protected EList<VarName> varNames;

  /**
   * The cached value of the '{@link #getValExprs() <em>Val Exprs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValExprs()
   * @generated
   * @ordered
   */
  protected EList<ValExpr> valExprs;

  /**
   * The cached value of the '{@link #getRight() <em>Right</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRight()
   * @generated
   * @ordered
   */
  protected ProcessBehaviour right;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProcessBehaviourEnableAcceptImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TorXakisDslPackage.Literals.PROCESS_BEHAVIOUR_ENABLE_ACCEPT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessBehaviour getLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeft(ProcessBehaviour newLeft, NotificationChain msgs)
  {
    ProcessBehaviour oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT, oldLeft, newLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft(ProcessBehaviour newLeft)
  {
    if (newLeft != left)
    {
      NotificationChain msgs = null;
      if (left != null)
        msgs = ((InternalEObject)left).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT, null, msgs);
      if (newLeft != null)
        msgs = ((InternalEObject)newLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT, null, msgs);
      msgs = basicSetLeft(newLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT, newLeft, newLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<VarDecl> getVarDecls()
  {
    if (varDecls == null)
    {
      varDecls = new EObjectContainmentEList<VarDecl>(VarDecl.class, this, TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_DECLS);
    }
    return varDecls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<VarName> getVarNames()
  {
    if (varNames == null)
    {
      varNames = new EObjectContainmentEList<VarName>(VarName.class, this, TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_NAMES);
    }
    return varNames;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ValExpr> getValExprs()
  {
    if (valExprs == null)
    {
      valExprs = new EObjectContainmentEList<ValExpr>(ValExpr.class, this, TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAL_EXPRS);
    }
    return valExprs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessBehaviour getRight()
  {
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRight(ProcessBehaviour newRight, NotificationChain msgs)
  {
    ProcessBehaviour oldRight = right;
    right = newRight;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT, oldRight, newRight);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight(ProcessBehaviour newRight)
  {
    if (newRight != right)
    {
      NotificationChain msgs = null;
      if (right != null)
        msgs = ((InternalEObject)right).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT, null, msgs);
      if (newRight != null)
        msgs = ((InternalEObject)newRight).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT, null, msgs);
      msgs = basicSetRight(newRight, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT, newRight, newRight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT:
        return basicSetLeft(null, msgs);
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_DECLS:
        return ((InternalEList<?>)getVarDecls()).basicRemove(otherEnd, msgs);
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_NAMES:
        return ((InternalEList<?>)getVarNames()).basicRemove(otherEnd, msgs);
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAL_EXPRS:
        return ((InternalEList<?>)getValExprs()).basicRemove(otherEnd, msgs);
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT:
        return basicSetRight(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT:
        return getLeft();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_DECLS:
        return getVarDecls();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_NAMES:
        return getVarNames();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAL_EXPRS:
        return getValExprs();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT:
        return getRight();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT:
        setLeft((ProcessBehaviour)newValue);
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_DECLS:
        getVarDecls().clear();
        getVarDecls().addAll((Collection<? extends VarDecl>)newValue);
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_NAMES:
        getVarNames().clear();
        getVarNames().addAll((Collection<? extends VarName>)newValue);
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAL_EXPRS:
        getValExprs().clear();
        getValExprs().addAll((Collection<? extends ValExpr>)newValue);
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT:
        setRight((ProcessBehaviour)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT:
        setLeft((ProcessBehaviour)null);
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_DECLS:
        getVarDecls().clear();
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_NAMES:
        getVarNames().clear();
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAL_EXPRS:
        getValExprs().clear();
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT:
        setRight((ProcessBehaviour)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__LEFT:
        return left != null;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_DECLS:
        return varDecls != null && !varDecls.isEmpty();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAR_NAMES:
        return varNames != null && !varNames.isEmpty();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__VAL_EXPRS:
        return valExprs != null && !valExprs.isEmpty();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_ENABLE_ACCEPT__RIGHT:
        return right != null;
    }
    return super.eIsSet(featureID);
  }

} //ProcessBehaviourEnableAcceptImpl
