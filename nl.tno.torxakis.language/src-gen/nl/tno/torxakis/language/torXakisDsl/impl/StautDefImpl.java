/**
 * generated by Xtext 2.10.0
 */
package nl.tno.torxakis.language.torXakisDsl.impl;

import nl.tno.torxakis.language.torXakisDsl.ExitDecl;
import nl.tno.torxakis.language.torXakisDsl.NeChannelsDeclList;
import nl.tno.torxakis.language.torXakisDsl.NeVarDeclList;
import nl.tno.torxakis.language.torXakisDsl.StautDef;
import nl.tno.torxakis.language.torXakisDsl.StautItems;
import nl.tno.torxakis.language.torXakisDsl.StautName;
import nl.tno.torxakis.language.torXakisDsl.TorXakisDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Staut Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.StautDefImpl#getName <em>Name</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.StautDefImpl#getNeChannelDeclList <em>Ne Channel Decl List</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.StautDefImpl#getNeVarDeclList <em>Ne Var Decl List</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.StautDefImpl#getExitDecl <em>Exit Decl</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.StautDefImpl#getStautItems <em>Staut Items</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StautDefImpl extends MinimalEObjectImpl.Container implements StautDef
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected StautName name;

  /**
   * The cached value of the '{@link #getNeChannelDeclList() <em>Ne Channel Decl List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNeChannelDeclList()
   * @generated
   * @ordered
   */
  protected NeChannelsDeclList neChannelDeclList;

  /**
   * The cached value of the '{@link #getNeVarDeclList() <em>Ne Var Decl List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNeVarDeclList()
   * @generated
   * @ordered
   */
  protected NeVarDeclList neVarDeclList;

  /**
   * The cached value of the '{@link #getExitDecl() <em>Exit Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExitDecl()
   * @generated
   * @ordered
   */
  protected ExitDecl exitDecl;

  /**
   * The cached value of the '{@link #getStautItems() <em>Staut Items</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStautItems()
   * @generated
   * @ordered
   */
  protected StautItems stautItems;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StautDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TorXakisDslPackage.Literals.STAUT_DEF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StautName getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetName(StautName newName, NotificationChain msgs)
  {
    StautName oldName = name;
    name = newName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__NAME, oldName, newName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(StautName newName)
  {
    if (newName != name)
    {
      NotificationChain msgs = null;
      if (name != null)
        msgs = ((InternalEObject)name).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__NAME, null, msgs);
      if (newName != null)
        msgs = ((InternalEObject)newName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__NAME, null, msgs);
      msgs = basicSetName(newName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__NAME, newName, newName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NeChannelsDeclList getNeChannelDeclList()
  {
    return neChannelDeclList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNeChannelDeclList(NeChannelsDeclList newNeChannelDeclList, NotificationChain msgs)
  {
    NeChannelsDeclList oldNeChannelDeclList = neChannelDeclList;
    neChannelDeclList = newNeChannelDeclList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST, oldNeChannelDeclList, newNeChannelDeclList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNeChannelDeclList(NeChannelsDeclList newNeChannelDeclList)
  {
    if (newNeChannelDeclList != neChannelDeclList)
    {
      NotificationChain msgs = null;
      if (neChannelDeclList != null)
        msgs = ((InternalEObject)neChannelDeclList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST, null, msgs);
      if (newNeChannelDeclList != null)
        msgs = ((InternalEObject)newNeChannelDeclList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST, null, msgs);
      msgs = basicSetNeChannelDeclList(newNeChannelDeclList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST, newNeChannelDeclList, newNeChannelDeclList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NeVarDeclList getNeVarDeclList()
  {
    return neVarDeclList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNeVarDeclList(NeVarDeclList newNeVarDeclList, NotificationChain msgs)
  {
    NeVarDeclList oldNeVarDeclList = neVarDeclList;
    neVarDeclList = newNeVarDeclList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST, oldNeVarDeclList, newNeVarDeclList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNeVarDeclList(NeVarDeclList newNeVarDeclList)
  {
    if (newNeVarDeclList != neVarDeclList)
    {
      NotificationChain msgs = null;
      if (neVarDeclList != null)
        msgs = ((InternalEObject)neVarDeclList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST, null, msgs);
      if (newNeVarDeclList != null)
        msgs = ((InternalEObject)newNeVarDeclList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST, null, msgs);
      msgs = basicSetNeVarDeclList(newNeVarDeclList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST, newNeVarDeclList, newNeVarDeclList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExitDecl getExitDecl()
  {
    return exitDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExitDecl(ExitDecl newExitDecl, NotificationChain msgs)
  {
    ExitDecl oldExitDecl = exitDecl;
    exitDecl = newExitDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__EXIT_DECL, oldExitDecl, newExitDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExitDecl(ExitDecl newExitDecl)
  {
    if (newExitDecl != exitDecl)
    {
      NotificationChain msgs = null;
      if (exitDecl != null)
        msgs = ((InternalEObject)exitDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__EXIT_DECL, null, msgs);
      if (newExitDecl != null)
        msgs = ((InternalEObject)newExitDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__EXIT_DECL, null, msgs);
      msgs = basicSetExitDecl(newExitDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__EXIT_DECL, newExitDecl, newExitDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StautItems getStautItems()
  {
    return stautItems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStautItems(StautItems newStautItems, NotificationChain msgs)
  {
    StautItems oldStautItems = stautItems;
    stautItems = newStautItems;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS, oldStautItems, newStautItems);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStautItems(StautItems newStautItems)
  {
    if (newStautItems != stautItems)
    {
      NotificationChain msgs = null;
      if (stautItems != null)
        msgs = ((InternalEObject)stautItems).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS, null, msgs);
      if (newStautItems != null)
        msgs = ((InternalEObject)newStautItems).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS, null, msgs);
      msgs = basicSetStautItems(newStautItems, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS, newStautItems, newStautItems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.STAUT_DEF__NAME:
        return basicSetName(null, msgs);
      case TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST:
        return basicSetNeChannelDeclList(null, msgs);
      case TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST:
        return basicSetNeVarDeclList(null, msgs);
      case TorXakisDslPackage.STAUT_DEF__EXIT_DECL:
        return basicSetExitDecl(null, msgs);
      case TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS:
        return basicSetStautItems(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.STAUT_DEF__NAME:
        return getName();
      case TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST:
        return getNeChannelDeclList();
      case TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST:
        return getNeVarDeclList();
      case TorXakisDslPackage.STAUT_DEF__EXIT_DECL:
        return getExitDecl();
      case TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS:
        return getStautItems();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.STAUT_DEF__NAME:
        setName((StautName)newValue);
        return;
      case TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST:
        setNeChannelDeclList((NeChannelsDeclList)newValue);
        return;
      case TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST:
        setNeVarDeclList((NeVarDeclList)newValue);
        return;
      case TorXakisDslPackage.STAUT_DEF__EXIT_DECL:
        setExitDecl((ExitDecl)newValue);
        return;
      case TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS:
        setStautItems((StautItems)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.STAUT_DEF__NAME:
        setName((StautName)null);
        return;
      case TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST:
        setNeChannelDeclList((NeChannelsDeclList)null);
        return;
      case TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST:
        setNeVarDeclList((NeVarDeclList)null);
        return;
      case TorXakisDslPackage.STAUT_DEF__EXIT_DECL:
        setExitDecl((ExitDecl)null);
        return;
      case TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS:
        setStautItems((StautItems)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.STAUT_DEF__NAME:
        return name != null;
      case TorXakisDslPackage.STAUT_DEF__NE_CHANNEL_DECL_LIST:
        return neChannelDeclList != null;
      case TorXakisDslPackage.STAUT_DEF__NE_VAR_DECL_LIST:
        return neVarDeclList != null;
      case TorXakisDslPackage.STAUT_DEF__EXIT_DECL:
        return exitDecl != null;
      case TorXakisDslPackage.STAUT_DEF__STAUT_ITEMS:
        return stautItems != null;
    }
    return super.eIsSet(featureID);
  }

} //StautDefImpl
