/**
 * generated by Xtext 2.10.0
 */
package nl.tno.torxakis.language.torXakisDsl.impl;

import nl.tno.torxakis.language.torXakisDsl.NeChannelsDeclList;
import nl.tno.torxakis.language.torXakisDsl.ProcessBehaviour;
import nl.tno.torxakis.language.torXakisDsl.ProcessBehaviourHide;
import nl.tno.torxakis.language.torXakisDsl.TorXakisDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Process Behaviour Hide</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ProcessBehaviourHideImpl#getNeChannelsDeclList <em>Ne Channels Decl List</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ProcessBehaviourHideImpl#getSub <em>Sub</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProcessBehaviourHideImpl extends ProcessBehaviourImpl implements ProcessBehaviourHide
{
  /**
   * The cached value of the '{@link #getNeChannelsDeclList() <em>Ne Channels Decl List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNeChannelsDeclList()
   * @generated
   * @ordered
   */
  protected NeChannelsDeclList neChannelsDeclList;

  /**
   * The cached value of the '{@link #getSub() <em>Sub</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSub()
   * @generated
   * @ordered
   */
  protected ProcessBehaviour sub;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProcessBehaviourHideImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TorXakisDslPackage.Literals.PROCESS_BEHAVIOUR_HIDE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NeChannelsDeclList getNeChannelsDeclList()
  {
    return neChannelsDeclList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNeChannelsDeclList(NeChannelsDeclList newNeChannelsDeclList, NotificationChain msgs)
  {
    NeChannelsDeclList oldNeChannelsDeclList = neChannelsDeclList;
    neChannelsDeclList = newNeChannelsDeclList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST, oldNeChannelsDeclList, newNeChannelsDeclList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNeChannelsDeclList(NeChannelsDeclList newNeChannelsDeclList)
  {
    if (newNeChannelsDeclList != neChannelsDeclList)
    {
      NotificationChain msgs = null;
      if (neChannelsDeclList != null)
        msgs = ((InternalEObject)neChannelsDeclList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST, null, msgs);
      if (newNeChannelsDeclList != null)
        msgs = ((InternalEObject)newNeChannelsDeclList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST, null, msgs);
      msgs = basicSetNeChannelsDeclList(newNeChannelsDeclList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST, newNeChannelsDeclList, newNeChannelsDeclList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessBehaviour getSub()
  {
    return sub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSub(ProcessBehaviour newSub, NotificationChain msgs)
  {
    ProcessBehaviour oldSub = sub;
    sub = newSub;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB, oldSub, newSub);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSub(ProcessBehaviour newSub)
  {
    if (newSub != sub)
    {
      NotificationChain msgs = null;
      if (sub != null)
        msgs = ((InternalEObject)sub).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB, null, msgs);
      if (newSub != null)
        msgs = ((InternalEObject)newSub).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB, null, msgs);
      msgs = basicSetSub(newSub, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB, newSub, newSub));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST:
        return basicSetNeChannelsDeclList(null, msgs);
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB:
        return basicSetSub(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST:
        return getNeChannelsDeclList();
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB:
        return getSub();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST:
        setNeChannelsDeclList((NeChannelsDeclList)newValue);
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB:
        setSub((ProcessBehaviour)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST:
        setNeChannelsDeclList((NeChannelsDeclList)null);
        return;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB:
        setSub((ProcessBehaviour)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__NE_CHANNELS_DECL_LIST:
        return neChannelsDeclList != null;
      case TorXakisDslPackage.PROCESS_BEHAVIOUR_HIDE__SUB:
        return sub != null;
    }
    return super.eIsSet(featureID);
  }

} //ProcessBehaviourHideImpl
