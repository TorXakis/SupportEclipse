/**
 * generated by Xtext 2.10.0
 */
package nl.tno.torxakis.language.torXakisDsl.impl;

import nl.tno.torxakis.language.torXakisDsl.ChannelOffer;
import nl.tno.torxakis.language.torXakisDsl.Communication;
import nl.tno.torxakis.language.torXakisDsl.Decoding;
import nl.tno.torxakis.language.torXakisDsl.TorXakisDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Decoding</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.DecodingImpl#getCommunication <em>Communication</em>}</li>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.DecodingImpl#getChannelOffer <em>Channel Offer</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DecodingImpl extends ConnectionItemImpl implements Decoding
{
  /**
   * The cached value of the '{@link #getCommunication() <em>Communication</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommunication()
   * @generated
   * @ordered
   */
  protected Communication communication;

  /**
   * The cached value of the '{@link #getChannelOffer() <em>Channel Offer</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChannelOffer()
   * @generated
   * @ordered
   */
  protected ChannelOffer channelOffer;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DecodingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TorXakisDslPackage.Literals.DECODING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Communication getCommunication()
  {
    return communication;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCommunication(Communication newCommunication, NotificationChain msgs)
  {
    Communication oldCommunication = communication;
    communication = newCommunication;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.DECODING__COMMUNICATION, oldCommunication, newCommunication);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCommunication(Communication newCommunication)
  {
    if (newCommunication != communication)
    {
      NotificationChain msgs = null;
      if (communication != null)
        msgs = ((InternalEObject)communication).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.DECODING__COMMUNICATION, null, msgs);
      if (newCommunication != null)
        msgs = ((InternalEObject)newCommunication).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.DECODING__COMMUNICATION, null, msgs);
      msgs = basicSetCommunication(newCommunication, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.DECODING__COMMUNICATION, newCommunication, newCommunication));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChannelOffer getChannelOffer()
  {
    return channelOffer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChannelOffer(ChannelOffer newChannelOffer, NotificationChain msgs)
  {
    ChannelOffer oldChannelOffer = channelOffer;
    channelOffer = newChannelOffer;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.DECODING__CHANNEL_OFFER, oldChannelOffer, newChannelOffer);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setChannelOffer(ChannelOffer newChannelOffer)
  {
    if (newChannelOffer != channelOffer)
    {
      NotificationChain msgs = null;
      if (channelOffer != null)
        msgs = ((InternalEObject)channelOffer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.DECODING__CHANNEL_OFFER, null, msgs);
      if (newChannelOffer != null)
        msgs = ((InternalEObject)newChannelOffer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.DECODING__CHANNEL_OFFER, null, msgs);
      msgs = basicSetChannelOffer(newChannelOffer, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.DECODING__CHANNEL_OFFER, newChannelOffer, newChannelOffer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.DECODING__COMMUNICATION:
        return basicSetCommunication(null, msgs);
      case TorXakisDslPackage.DECODING__CHANNEL_OFFER:
        return basicSetChannelOffer(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.DECODING__COMMUNICATION:
        return getCommunication();
      case TorXakisDslPackage.DECODING__CHANNEL_OFFER:
        return getChannelOffer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.DECODING__COMMUNICATION:
        setCommunication((Communication)newValue);
        return;
      case TorXakisDslPackage.DECODING__CHANNEL_OFFER:
        setChannelOffer((ChannelOffer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.DECODING__COMMUNICATION:
        setCommunication((Communication)null);
        return;
      case TorXakisDslPackage.DECODING__CHANNEL_OFFER:
        setChannelOffer((ChannelOffer)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.DECODING__COMMUNICATION:
        return communication != null;
      case TorXakisDslPackage.DECODING__CHANNEL_OFFER:
        return channelOffer != null;
    }
    return super.eIsSet(featureID);
  }

} //DecodingImpl
