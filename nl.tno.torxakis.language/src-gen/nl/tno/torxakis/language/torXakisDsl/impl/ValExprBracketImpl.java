/**
 * generated by Xtext 2.10.0
 */
package nl.tno.torxakis.language.torXakisDsl.impl;

import nl.tno.torxakis.language.torXakisDsl.TorXakisDslPackage;
import nl.tno.torxakis.language.torXakisDsl.ValExpr;
import nl.tno.torxakis.language.torXakisDsl.ValExprBracket;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Val Expr Bracket</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.tno.torxakis.language.torXakisDsl.impl.ValExprBracketImpl#getValExpr <em>Val Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ValExprBracketImpl extends ValExpr2Impl implements ValExprBracket
{
  /**
   * The cached value of the '{@link #getValExpr() <em>Val Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValExpr()
   * @generated
   * @ordered
   */
  protected ValExpr valExpr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ValExprBracketImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TorXakisDslPackage.Literals.VAL_EXPR_BRACKET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValExpr getValExpr()
  {
    return valExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValExpr(ValExpr newValExpr, NotificationChain msgs)
  {
    ValExpr oldValExpr = valExpr;
    valExpr = newValExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR, oldValExpr, newValExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValExpr(ValExpr newValExpr)
  {
    if (newValExpr != valExpr)
    {
      NotificationChain msgs = null;
      if (valExpr != null)
        msgs = ((InternalEObject)valExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR, null, msgs);
      if (newValExpr != null)
        msgs = ((InternalEObject)newValExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR, null, msgs);
      msgs = basicSetValExpr(newValExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR, newValExpr, newValExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR:
        return basicSetValExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR:
        return getValExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR:
        setValExpr((ValExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR:
        setValExpr((ValExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TorXakisDslPackage.VAL_EXPR_BRACKET__VAL_EXPR:
        return valExpr != null;
    }
    return super.eIsSet(featureID);
  }

} //ValExprBracketImpl
