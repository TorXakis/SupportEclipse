-- ----------------------------------------------------------------------------------------- --
-- channels

CHANDEF  ChanDefs   ::=  In, Out  :: String
ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- inputs and outputs

PROCDEF  proc  [ In, Out :: String ]  ( ) ::=
        In ? x
    >-> Out ! x
    >-> proc [ In, Out ] ()
ENDDEF

-- ----------------------------------------------------------------------------------------- --
-- model


MODELDEF  Model ::=
        CHAN IN     In
        CHAN OUT    Out

        BEHAVIOUR   proc [ In, Out ] ( )
ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- sut


CNECTDEF  Sut ::=
        CLIENTSOCK

        CHAN OUT  In                        HOST "localhost"  PORT 9999
        ENCODE    In ? s                    ->  ! s

        CHAN IN   Out                       HOST "localhost"  PORT 9999
        DECODE    Out ! s                   <-  ? s
ENDDEF

CNECTDEF  Sim ::=
        SERVERSOCK

        CHAN IN   In                        HOST "localhost"  PORT 9999
        DECODE    In ! s                    <-  ? s

        CHAN OUT  Out                       HOST "localhost"  PORT 9999
        ENCODE    Out ? s                   ->  ! s
ENDDEF

CNECTDEF  Xut ::=
        CLIENTSOCK

        CHAN OUT  In                        HOST "localhost"  PORT 9999
        ENCODE    In ? s                    ->  ! toXml(s)

        CHAN IN   Out                       HOST "localhost"  PORT 9999
        DECODE    Out ! fromXml(s)          <-  ? s
ENDDEF

CNECTDEF  Xim ::=
        SERVERSOCK

        CHAN IN   In                        HOST "localhost"  PORT 9999
        DECODE    In ! fromXml(s)           <-  ? s

        CHAN OUT  Out                       HOST "localhost"  PORT 9999
        ENCODE    Out ? s                   ->  ! toXml(s)
ENDDEF
